"use strict";(self.webpackChunkcelo_docs=self.webpackChunkcelo_docs||[]).push([[6687],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return m}});var o=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function c(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?c(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):c(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function a(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},c=Object.keys(e);for(o=0;o<c.length;o++)t=c[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(o=0;o<c.length;o++)t=c[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=o.createContext({}),s=function(e){var n=o.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},u=function(e){var n=s(e.components);return o.createElement(l.Provider,{value:n},e.children)},f={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},p=o.forwardRef((function(e,n){var t=e.components,r=e.mdxType,c=e.originalType,l=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),p=s(t),m=r,g=p["".concat(l,".").concat(m)]||p[m]||f[m]||c;return t?o.createElement(g,i(i({ref:n},u),{},{components:t})):o.createElement(g,i({ref:n},u))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var c=t.length,i=new Array(c);i[0]=p;var a={};for(var l in n)hasOwnProperty.call(n,l)&&(a[l]=n[l]);a.originalType=e,a.mdxType="string"==typeof e?e:r,i[1]=a;for(var s=2;s<c;s++)i[s]=t[s];return o.createElement.apply(null,i)}return o.createElement.apply(null,t)}p.displayName="MDXCreateElement"},66687:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return a},contentTitle:function(){return l},metadata:function(){return s},toc:function(){return u},default:function(){return p}});var o=t(83117),r=t(80102),c=(t(67294),t(3905)),i=["components"],a={},l="celocli config",s={unversionedId:"command-line-interface/config",id:"command-line-interface/config",title:"celocli config",description:"Configure CLI options which persist across commands",source:"@site/docs/command-line-interface/config.md",sourceDirName:"command-line-interface",slug:"/command-line-interface/config",permalink:"/es/command-line-interface/config",editUrl:"https://celo.crowdin.com/celo-docs/es",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"celocli commands",permalink:"/es/command-line-interface/commands"},next:{title:"celocli dkg",permalink:"/es/command-line-interface/dkg"}},u=[{value:"<code>celocli config:get</code>",id:"celocli-configget",children:[],level:2},{value:"<code>celocli config:set</code>",id:"celocli-configset",children:[],level:2}],f={toc:u};function p(e){var n=e.components,t=(0,r.Z)(e,i);return(0,c.kt)("wrapper",(0,o.Z)({},f,t,{components:n,mdxType:"MDXLayout"}),(0,c.kt)("h1",{id:"celocli-config"},(0,c.kt)("inlineCode",{parentName:"h1"},"celocli config")),(0,c.kt)("p",null,"Configure CLI options which persist across commands"),(0,c.kt)("h2",{id:"celocli-configget"},(0,c.kt)("inlineCode",{parentName:"h2"},"celocli config:get")),(0,c.kt)("p",null,"Output network node configuration"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre"},"Output network node configuration\n\nUSAGE\n  $ celocli config:get\n\nOPTIONS\n  --globalHelp  View all available global flags\n")),(0,c.kt)("p",null,(0,c.kt)("em",{parentName:"p"},"See code: ",(0,c.kt)("a",{parentName:"em",href:"https://github.com/celo-org/celo-monorepo/tree/master/packages/cli/src/commands/config/get.ts"},"src/commands/config/get.ts"))),(0,c.kt)("h2",{id:"celocli-configset"},(0,c.kt)("inlineCode",{parentName:"h2"},"celocli config:set")),(0,c.kt)("p",null,"Configure running node information for propogating transactions to network"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre"},"Configure running node information for propogating transactions to network\n\nUSAGE\n  $ celocli config:set\n\nOPTIONS\n  -n, --node=node\n      URL of the node to run commands against (defaults to 'http://localhost:8545')\n\n  --gasCurrency=(auto|Auto|CELO|celo|cUSD|cusd|cEUR|ceur|cREAL|creal)\n      Use a specific gas currency for transaction fees (defaults to 'auto' which uses\n      whatever feeCurrency is available)\n\n  --globalHelp\n      View all available global flags\n\nEXAMPLES\n  set --node ws://localhost:2500\n\n  set --node <geth-location>/geth.ipc\n\n  set --gasCurrency cUSD\n\n  set --gasCurrency CELO\n")),(0,c.kt)("p",null,(0,c.kt)("em",{parentName:"p"},"See code: ",(0,c.kt)("a",{parentName:"em",href:"https://github.com/celo-org/celo-monorepo/tree/master/packages/cli/src/commands/config/set.ts"},"src/commands/config/set.ts"))))}p.isMDXComponent=!0}}]);