"use strict";(self.webpackChunkcelo_docs=self.webpackChunkcelo_docs||[]).push([[5534],{3905:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return p}});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function c(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?c(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):c(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function a(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},c=Object.keys(e);for(n=0;n<c.length;n++)r=c[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(n=0;n<c.length;n++)r=c[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=n.createContext({}),l=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=l(e.components);return n.createElement(s.Provider,{value:t},e.children)},f={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,c=e.originalType,s=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),d=l(r),p=o,m=d["".concat(s,".").concat(p)]||d[p]||f[p]||c;return r?n.createElement(m,i(i({ref:t},u),{},{components:r})):n.createElement(m,i({ref:t},u))}));function p(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var c=r.length,i=new Array(c);i[0]=d;var a={};for(var s in t)hasOwnProperty.call(t,s)&&(a[s]=t[s]);a.originalType=e,a.mdxType="string"==typeof e?e:o,i[1]=a;for(var l=2;l<c;l++)i[l]=r[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},14111:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return a},contentTitle:function(){return s},metadata:function(){return l},toc:function(){return u},default:function(){return d}});var n=r(83117),o=r(80102),c=(r(67294),r(3905)),i=["components"],a={title:"Validator Set Differences",description:"How validator sets are elected and managed with the Zsc protocol."},s="Validator Set Differences",l={unversionedId:"celo-codebase/protocol/consensus/validator-set-differences",id:"celo-codebase/protocol/consensus/validator-set-differences",title:"Validator Set Differences",description:"How validator sets are elected and managed with the Zsc protocol.",source:"@site/docs/celo-codebase/protocol/consensus/validator-set-differences.md",sourceDirName:"celo-codebase/protocol/consensus",slug:"/celo-codebase/protocol/consensus/validator-set-differences",permalink:"/es/celo-codebase/protocol/consensus/validator-set-differences",editUrl:"https://celo.crowdin.com/celo-docs/es",tags:[],version:"current",frontMatter:{title:"Validator Set Differences",description:"How validator sets are elected and managed with the Zsc protocol."},sidebar:"docs",previous:{title:"Consensus Introduction",permalink:"/es/celo-codebase/protocol/consensus"},next:{title:"Locating Nodes",permalink:"/es/celo-codebase/protocol/consensus/locating-nodes"}},u=[{value:"Computing Set Differences",id:"computing-set-differences",children:[],level:2}],f={toc:u};function d(e){var t=e.components,r=(0,o.Z)(e,i);return(0,c.kt)("wrapper",(0,n.Z)({},f,r,{components:t,mdxType:"MDXLayout"}),(0,c.kt)("h1",{id:"validator-set-differences"},"Validator Set Differences"),(0,c.kt)("hr",null),(0,c.kt)("h2",{id:"computing-set-differences"},"Computing Set Differences"))}d.isMDXComponent=!0}}]);