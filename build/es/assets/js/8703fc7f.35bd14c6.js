"use strict";(self.webpackChunkcelo_docs=self.webpackChunkcelo_docs||[]).push([[5128],{3905:function(e,n,t){t.d(n,{Zo:function(){return s},kt:function(){return d}});var r=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function c(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?c(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):c(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},c=Object.keys(e);for(r=0;r<c.length;r++)t=c[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)t=c[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=r.createContext({}),m=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},s=function(e){var n=m(e.components);return r.createElement(l.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},p=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,c=e.originalType,l=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),p=m(t),d=o,f=p["".concat(l,".").concat(d)]||p[d]||u[d]||c;return t?r.createElement(f,a(a({ref:n},s),{},{components:t})):r.createElement(f,a({ref:n},s))}));function d(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var c=t.length,a=new Array(c);a[0]=p;var i={};for(var l in n)hasOwnProperty.call(n,l)&&(i[l]=n[l]);i.originalType=e,i.mdxType="string"==typeof e?e:o,a[1]=i;for(var m=2;m<c;m++)a[m]=t[m];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}p.displayName="MDXCreateElement"},29849:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return i},contentTitle:function(){return l},metadata:function(){return m},toc:function(){return s},default:function(){return p}});var r=t(83117),o=t(80102),c=(t(67294),t(3905)),a=["components"],i={},l="celocli commands",m={unversionedId:"command-line-interface/commands",id:"command-line-interface/commands",title:"celocli commands",description:"list all the commands",source:"@site/docs/command-line-interface/commands.md",sourceDirName:"command-line-interface",slug:"/command-line-interface/commands",permalink:"/es/command-line-interface/commands",editUrl:"https://celo.crowdin.com/celo-docs/es",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"celocli autocomplete",permalink:"/es/command-line-interface/autocomplete"},next:{title:"celocli config",permalink:"/es/command-line-interface/config"}},s=[{value:"<code>celocli commands</code>",id:"celocli-commands-1",children:[],level:2}],u={toc:s};function p(e){var n=e.components,t=(0,o.Z)(e,a);return(0,c.kt)("wrapper",(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,c.kt)("h1",{id:"celocli-commands"},(0,c.kt)("inlineCode",{parentName:"h1"},"celocli commands")),(0,c.kt)("p",null,"list all the commands"),(0,c.kt)("h2",{id:"celocli-commands-1"},(0,c.kt)("inlineCode",{parentName:"h2"},"celocli commands")),(0,c.kt)("p",null,"list all the commands"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre"},"list all the commands\n\nUSAGE\n  $ celocli commands\n\nOPTIONS\n  -h, --help              show CLI help\n  -j, --json              display unfiltered api data in json format\n  -x, --extended          show extra columns\n  --columns=columns       only show provided columns (comma-separated)\n  --csv                   output is csv format [alias: --output=csv]\n  --filter=filter         filter property by partial string matching, ex: name=foo\n  --hidden                show hidden commands\n  --no-header             hide table header from output\n  --no-truncate           do not truncate output to fit screen\n  --output=csv|json|yaml  output in a more machine friendly format\n  --sort=sort             property to sort by (prepend '-' for descending)\n")),(0,c.kt)("p",null,(0,c.kt)("em",{parentName:"p"},"See code: ",(0,c.kt)("a",{parentName:"em",href:"https://github.com/oclif/plugin-commands/blob/v1.3.0/src/commands/commands.ts"},"@oclif/plugin-commands"))))}p.isMDXComponent=!0}}]);