"use strict";(self.webpackChunkcelo_docs=self.webpackChunkcelo_docs||[]).push([[2364],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return h}});var r=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=r.createContext({}),c=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},u=function(e){var n=c(e.components);return r.createElement(s.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=c(t),h=o,g=d["".concat(s,".").concat(h)]||d[h]||p[h]||a;return t?r.createElement(g,i(i({ref:n},u),{},{components:t})):r.createElement(g,i({ref:n},u))}));function h(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=d;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var c=2;c<a;c++)i[c]=t[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},42127:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return c},toc:function(){return u},default:function(){return d}});var r=t(83117),o=t(80102),a=(t(67294),t(3905)),i=["components"],l={title:"Celo General Integration Information",slug:"/developer-guide/integrations/general",description:"General information about integrations regardless of your service or use case."},s="General",c={unversionedId:"developer-resources/integrations/general",id:"developer-resources/integrations/general",title:"Celo General Integration Information",description:"General information about integrations regardless of your service or use case.",source:"@site/docs/developer-resources/integrations/general.md",sourceDirName:"developer-resources/integrations",slug:"/developer-guide/integrations/general",permalink:"/es/developer-guide/integrations/general",editUrl:"",tags:[],version:"current",frontMatter:{title:"Celo General Integration Information",slug:"/developer-guide/integrations/general",description:"General information about integrations regardless of your service or use case."}},u=[{value:"Accessing the chain",id:"accessing-the-chain",children:[{value:"Running your own node",id:"running-your-own-node",children:[],level:3},{value:"Forno",id:"forno",children:[],level:3},{value:"Blockscout",id:"blockscout",children:[],level:3}],level:2},{value:"Signing Transactions",id:"signing-transactions",children:[],level:2}],p={toc:u};function d(e){var n=e.components,t=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"general"},"General"),(0,a.kt)("p",null,"General information about integrations regardless of your service or use case."),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"accessing-the-chain"},"Accessing the chain"),(0,a.kt)("p",null,"There are a myriad of ways through which you can access chain data:"),(0,a.kt)("h3",{id:"running-your-own-node"},"Running your own node"),(0,a.kt)("p",null,"To be completely independent and have a reliable view into the latest chain data, you will likely want to run your own node(s)."),(0,a.kt)("p",null,"You can just clone ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/celo-org/celo-blockchain"},(0,a.kt)("inlineCode",{parentName:"a"},"celo-blockchain"))," and then run ",(0,a.kt)("inlineCode",{parentName:"p"},"make geth")," to receive the binary."),(0,a.kt)("p",null,"By default, ",(0,a.kt)("inlineCode",{parentName:"p"},"geth")," will use ",(0,a.kt)("inlineCode",{parentName:"p"},"/root/.celo")," as the data dir, if you would like to change that specify the ",(0,a.kt)("inlineCode",{parentName:"p"},"--datadir")," argument."),(0,a.kt)("p",null,"This is all you should need to connect to a network:"),(0,a.kt)("p",null,"For Mainnet:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"geth\n")),(0,a.kt)("p",null,"For Alfajores:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"geth --alfajores\n")),(0,a.kt)("p",null,"For Baklava:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"geth --baklava\n")),(0,a.kt)("p",null,"For more command line options, please see ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/ethereum/go-ethereum/wiki/Command-Line-Options"},"https://github.com/ethereum/go-ethereum/wiki/Command-Line-Options")),(0,a.kt)("h3",{id:"forno"},"Forno"),(0,a.kt)("p",null,"Forno is a hosted node service for interacting with the Celo network. This allow the user to get connected to the Celo Blockchain without having to run its own node."),(0,a.kt)("p",null,"Can be used as an ",(0,a.kt)("inlineCode",{parentName:"p"},"Http Provider")," with ",(0,a.kt)("inlineCode",{parentName:"p"},"ContractKit")),(0,a.kt)("p",null,"As Forno is a public node you will have to sign transactions locally because with your own private key, because Forno doesn't store them. But don't worry, the ",(0,a.kt)("inlineCode",{parentName:"p"},"ContractKit")," will handle this for you."),(0,a.kt)("p",null,"Forno networks:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Alfajores = 'https://alfajores-forno.celo-testnet.org'\n\nBaklava = 'https://baklava-forno.celo-testnet.org'\n\nMainnet = 'https://forno.celo.org'\n")),(0,a.kt)("h3",{id:"blockscout"},"Blockscout"),(0,a.kt)("p",null,"We also expose data on the cLabs run blockscout instance. Blockscout itself exposes an API."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Alfajores = 'https://alfajores-blockscout.celo-testnet.org'\n\nBaklava = 'https://baklava-blockscout.celo-testnet.org'\n\nMainnet = 'https://explorer.celo.org/'\n")),(0,a.kt)("h2",{id:"signing-transactions"},"Signing Transactions"),(0,a.kt)("p",null,"Compared to Ethereum transaction, Celo transactions have 3 additional, optional fields:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"feeCurrency")," - Specifies the address of the currency in which fees should be paid. If ",(0,a.kt)("inlineCode",{parentName:"li"},"null"),", the native token ",(0,a.kt)("inlineCode",{parentName:"li"},"CELO")," is assumed.")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"gatewayFee")," - The value of the gateway fee.")),(0,a.kt)("p",null,"To sign transactions, you have the following options:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Use the JSON-RPC ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/ethereum/wiki/wiki/JSON-RPC#eth_sendtransaction"},(0,a.kt)("inlineCode",{parentName:"a"},"sendTransaction"))," method to your node which would have the account in question unlocked. (Either manually or via a library such as ",(0,a.kt)("inlineCode",{parentName:"li"},"web3"),")"),(0,a.kt)("li",{parentName:"ul"},"Use ",(0,a.kt)("a",{parentName:"li",href:"/developer-guide/contractkit"},"ContractKit's")," local signing feature.")))}d.isMDXComponent=!0}}]);