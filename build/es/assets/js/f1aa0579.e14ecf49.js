"use strict";(self.webpackChunkcelo_docs=self.webpackChunkcelo_docs||[]).push([[1543],{3905:function(e,a,t){t.d(a,{Zo:function(){return i},kt:function(){return u}});var l=t(67294);function n(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function o(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);a&&(l=l.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,l)}return t}function r(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?o(Object(t),!0).forEach((function(a){n(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function c(e,a){if(null==e)return{};var t,l,n=function(e,a){if(null==e)return{};var t,l,n={},o=Object.keys(e);for(l=0;l<o.length;l++)t=o[l],a.indexOf(t)>=0||(n[t]=e[t]);return n}(e,a);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(l=0;l<o.length;l++)t=o[l],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var d=l.createContext({}),s=function(e){var a=l.useContext(d),t=a;return e&&(t="function"==typeof e?e(a):r(r({},a),e)),t},i=function(e){var a=s(e.components);return l.createElement(d.Provider,{value:a},e.children)},f={inlineCode:"code",wrapper:function(e){var a=e.children;return l.createElement(l.Fragment,{},a)}},p=l.forwardRef((function(e,a){var t=e.components,n=e.mdxType,o=e.originalType,d=e.parentName,i=c(e,["components","mdxType","originalType","parentName"]),p=s(t),u=n,m=p["".concat(d,".").concat(u)]||p[u]||f[u]||o;return t?l.createElement(m,r(r({ref:a},i),{},{components:t})):l.createElement(m,r({ref:a},i))}));function u(e,a){var t=arguments,n=a&&a.mdxType;if("string"==typeof e||n){var o=t.length,r=new Array(o);r[0]=p;var c={};for(var d in a)hasOwnProperty.call(a,d)&&(c[d]=a[d]);c.originalType=e,c.mdxType="string"==typeof e?e:n,r[1]=c;for(var s=2;s<o;s++)r[s]=t[s];return l.createElement.apply(null,r)}return l.createElement.apply(null,t)}p.displayName="MDXCreateElement"},22412:function(e,a,t){t.r(a),t.d(a,{frontMatter:function(){return c},contentTitle:function(){return d},metadata:function(){return s},toc:function(){return i},default:function(){return p}});var l=t(83117),n=t(80102),o=(t(67294),t(3905)),r=["components"],c={},d="celocli releasegold",s={unversionedId:"command-line-interface/releasegold",id:"command-line-interface/releasegold",title:"celocli releasegold",description:"View and manage Release Gold contracts",source:"@site/docs/command-line-interface/releasegold.md",sourceDirName:"command-line-interface",slug:"/command-line-interface/releasegold",permalink:"/es/command-line-interface/releasegold",editUrl:"https://celo.crowdin.com/celo-docs/es",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"celocli plugins",permalink:"/es/command-line-interface/plugins"},next:{title:"celocli reserve",permalink:"/es/command-line-interface/reserve"}},i=[{value:"<code>celocli releasegold:authorize</code>",id:"celocli-releasegoldauthorize",children:[],level:2},{value:"<code>celocli releasegold:create-account</code>",id:"celocli-releasegoldcreate-account",children:[],level:2},{value:"<code>celocli releasegold:locked-gold</code>",id:"celocli-releasegoldlocked-gold",children:[],level:2},{value:"<code>celocli releasegold:refund-and-finalize</code>",id:"celocli-releasegoldrefund-and-finalize",children:[],level:2},{value:"<code>celocli releasegold:revoke</code>",id:"celocli-releasegoldrevoke",children:[],level:2},{value:"<code>celocli releasegold:revoke-votes</code>",id:"celocli-releasegoldrevoke-votes",children:[],level:2},{value:"<code>celocli releasegold:set-account</code>",id:"celocli-releasegoldset-account",children:[],level:2},{value:"<code>celocli releasegold:set-account-wallet-address</code>",id:"celocli-releasegoldset-account-wallet-address",children:[],level:2},{value:"<code>celocli releasegold:set-beneficiary</code>",id:"celocli-releasegoldset-beneficiary",children:[],level:2},{value:"<code>celocli releasegold:set-can-expire</code>",id:"celocli-releasegoldset-can-expire",children:[],level:2},{value:"<code>celocli releasegold:set-liquidity-provision</code>",id:"celocli-releasegoldset-liquidity-provision",children:[],level:2},{value:"<code>celocli releasegold:set-max-distribution</code>",id:"celocli-releasegoldset-max-distribution",children:[],level:2},{value:"<code>celocli releasegold:show</code>",id:"celocli-releasegoldshow",children:[],level:2},{value:"<code>celocli releasegold:transfer-dollars</code>",id:"celocli-releasegoldtransfer-dollars",children:[],level:2},{value:"<code>celocli releasegold:withdraw</code>",id:"celocli-releasegoldwithdraw",children:[],level:2}],f={toc:i};function p(e){var a=e.components,t=(0,n.Z)(e,r);return(0,o.kt)("wrapper",(0,l.Z)({},f,t,{components:a,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"celocli-releasegold"},(0,o.kt)("inlineCode",{parentName:"h1"},"celocli releasegold")),(0,o.kt)("p",null,"View and manage Release Gold contracts"),(0,o.kt)("h2",{id:"celocli-releasegoldauthorize"},(0,o.kt)("inlineCode",{parentName:"h2"},"celocli releasegold:authorize")),(0,o.kt)("p",null,"Authorize an alternative key to be used for a given action (Vote, Validate, Attest) on behalf of the ReleaseGold instance contract."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Authorize an alternative key to be used for a given action (Vote, Validate, Attest) on behalf of the ReleaseGold instance contract.\n\nUSAGE\n  $ celocli releasegold:authorize\n\nOPTIONS\n  --blsKey=0x                                            The BLS public key that the\n                                                         validator is using for\n                                                         consensus, should pass proof of\n                                                         possession. 96 bytes.\n\n  --blsPop=0x                                            The BLS public key\n                                                         proof-of-possession, which\n                                                         consists of a signature on the\n                                                         account address. 48 bytes.\n\n  --contract=0xc1912fEE45d61C87Cc5EA59DaE31190FFFFf232d  (required) Address of the\n                                                         ReleaseGold Contract\n\n  --globalHelp                                           View all available global flags\n\n  --role=vote|validator|attestation                      (required)\n\n  --signature=0x                                         (required) Signature (a.k.a.\n                                                         proof-of-possession) of the\n                                                         signer key\n\n  --signer=0xc1912fEE45d61C87Cc5EA59DaE31190FFFFf232d    (required) The signer key that\n                                                         is to be used for voting\n                                                         through the ReleaseGold\n                                                         instance\n\nEXAMPLES\n  authorize --contract 0x5409ED021D9299bf6814279A6A1411A7e866A631 --role vote --signer\n  0x6ecbe1db9ef729cbe972c83fb886247691fb6beb --signature\n  0x1b9fca4bbb5bfb1dbe69ef1cddbd9b4202dcb6b134c5170611e1e36ecfa468d7b46c85328d504934fce6\n  c2a1571603a50ae224d2b32685e84d4d1a1eebad8452eb\n\n  authorize --contract 0x5409ED021D9299bf6814279A6A1411A7e866A631 --role validator\n  --signer 0x6ecbe1db9ef729cbe972c83fb886247691fb6beb --signature\n  0x1b9fca4bbb5bfb1dbe69ef1cddbd9b4202dcb6b134c5170611e1e36ecfa468d7b46c85328d504934fce6\n  c2a1571603a50ae224d2b32685e84d4d1a1eebad8452eb --blsKey\n  0x4fa3f67fc913878b068d1fa1cdddc54913d3bf988dbe5a36a20fa888f20d4894c408a6773f3d7bde1115\n  4f2a3076b700d345a42fd25a0e5e83f4db5586ac7979ac2053cd95d8f2efd3e959571ceccaa743e02cf4be\n  3f5d7aaddb0b06fc9aff00 --blsPop\n  0xcdb77255037eb68897cd487fdd85388cbda448f617f874449d4b11588b0b7ad8ddc20d9bb450b513bb35\n  664ea3923900\n\n  authorize --contract 0x5409ED021D9299bf6814279A6A1411A7e866A631 --role attestation\n  --signer 0x6ecbe1db9ef729cbe972c83fb886247691fb6beb --signature\n  0x1b9fca4bbb5bfb1dbe69ef1cddbd9b4202dcb6b134c5170611e1e36ecfa468d7b46c85328d504934fce6\n  c2a1571603a50ae224d2b32685e84d4d1a1eebad8452eb\n")),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"See code: ",(0,o.kt)("a",{parentName:"em",href:"https://github.com/celo-org/celo-monorepo/tree/master/packages/cli/src/commands/releasegold/authorize.ts"},"src/commands/releasegold/authorize.ts"))),(0,o.kt)("h2",{id:"celocli-releasegoldcreate-account"},(0,o.kt)("inlineCode",{parentName:"h2"},"celocli releasegold:create-account")),(0,o.kt)("p",null,"Creates a new account for the ReleaseGold instance"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Creates a new account for the ReleaseGold instance\n\nUSAGE\n  $ celocli releasegold:create-account\n\nOPTIONS\n  --contract=0xc1912fEE45d61C87Cc5EA59DaE31190FFFFf232d  (required) Address of the\n                                                         ReleaseGold Contract\n\n  --globalHelp                                           View all available global flags\n\nEXAMPLE\n  create-account --contract 0x5409ED021D9299bf6814279A6A1411A7e866A631\n")),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"See code: ",(0,o.kt)("a",{parentName:"em",href:"https://github.com/celo-org/celo-monorepo/tree/master/packages/cli/src/commands/releasegold/create-account.ts"},"src/commands/releasegold/create-account.ts"))),(0,o.kt)("h2",{id:"celocli-releasegoldlocked-gold"},(0,o.kt)("inlineCode",{parentName:"h2"},"celocli releasegold:locked-gold")),(0,o.kt)("p",null,"Perform actions ","[lock, unlock, withdraw]"," on CELO that has been locked via the provided ReleaseGold contract."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Perform actions [lock, unlock, withdraw] on CELO that has been locked via the provided ReleaseGold contract.\n\nUSAGE\n  $ celocli releasegold:locked-gold\n\nOPTIONS\n  -a, --action=lock|unlock|withdraw                      (required) Action to perform on\n                                                         contract's gold\n\n  --contract=0xc1912fEE45d61C87Cc5EA59DaE31190FFFFf232d  (required) Address of the\n                                                         ReleaseGold Contract\n\n  --globalHelp                                           View all available global flags\n\n  --value=10000000000000000000000                        (required) Amount of gold to\n                                                         perform `action` with\n\n  --yes                                                  Answer yes to prompt\n\nEXAMPLES\n  locked-gold --contract 0xCcc8a47BE435F1590809337BB14081b256Ae26A8 --action lock\n  --value 10000000000000000000000\n\n  locked-gold --contract 0xCcc8a47BE435F1590809337BB14081b256Ae26A8 --action unlock\n  --value 10000000000000000000000\n\n  locked-gold --contract 0xCcc8a47BE435F1590809337BB14081b256Ae26A8 --action withdraw\n  --value 10000000000000000000000\n")),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"See code: ",(0,o.kt)("a",{parentName:"em",href:"https://github.com/celo-org/celo-monorepo/tree/master/packages/cli/src/commands/releasegold/locked-gold.ts"},"src/commands/releasegold/locked-gold.ts"))),(0,o.kt)("h2",{id:"celocli-releasegoldrefund-and-finalize"},(0,o.kt)("inlineCode",{parentName:"h2"},"celocli releasegold:refund-and-finalize")),(0,o.kt)("p",null,"Refund the given contract's balance to the appopriate parties and destroy the contact. Can only be called by the release owner of revocable ReleaseGold instances."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Refund the given contract's balance to the appopriate parties and destroy the contact. Can only be called by the release owner of revocable ReleaseGold instances.\n\nUSAGE\n  $ celocli releasegold:refund-and-finalize\n\nOPTIONS\n  --contract=0xc1912fEE45d61C87Cc5EA59DaE31190FFFFf232d  (required) Address of the\n                                                         ReleaseGold Contract\n\n  --globalHelp                                           View all available global flags\n\nEXAMPLE\n  refund-and-finalize --contract 0x5409ED021D9299bf6814279A6A1411A7e866A631\n")),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"See code: ",(0,o.kt)("a",{parentName:"em",href:"https://github.com/celo-org/celo-monorepo/tree/master/packages/cli/src/commands/releasegold/refund-and-finalize.ts"},"src/commands/releasegold/refund-and-finalize.ts"))),(0,o.kt)("h2",{id:"celocli-releasegoldrevoke"},(0,o.kt)("inlineCode",{parentName:"h2"},"celocli releasegold:revoke")),(0,o.kt)("p",null,"Revoke the given contract instance. Once revoked, any Locked Gold can be unlocked by the release owner. The beneficiary will then be able to withdraw any released Gold that had yet to be withdrawn, and the remainder can be transferred by the release owner to the refund address. Note that not all ReleaseGold instances are revokable."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Revoke the given contract instance. Once revoked, any Locked Gold can be unlocked by the release owner. The beneficiary will then be able to withdraw any released Gold that had yet to be withdrawn, and the remainder can be transferred by the release owner to the refund address. Note that not all ReleaseGold instances are revokable.\n\nUSAGE\n  $ celocli releasegold:revoke\n\nOPTIONS\n  --contract=0xc1912fEE45d61C87Cc5EA59DaE31190FFFFf232d  (required) Address of the\n                                                         ReleaseGold Contract\n\n  --globalHelp                                           View all available global flags\n\n  --yesreally                                            Override prompt to set\n                                                         liquidity (be careful!)\n\nEXAMPLE\n  revoke --contract 0x5409ED021D9299bf6814279A6A1411A7e866A631\n")),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"See code: ",(0,o.kt)("a",{parentName:"em",href:"https://github.com/celo-org/celo-monorepo/tree/master/packages/cli/src/commands/releasegold/revoke.ts"},"src/commands/releasegold/revoke.ts"))),(0,o.kt)("h2",{id:"celocli-releasegoldrevoke-votes"},(0,o.kt)("inlineCode",{parentName:"h2"},"celocli releasegold:revoke-votes")),(0,o.kt)("p",null,"Revokes ",(0,o.kt)("inlineCode",{parentName:"p"},"votes")," for the given contract's account from the given group's account"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Revokes `votes` for the given contract's account from the given group's account\n\nUSAGE\n  $ celocli releasegold:revoke-votes\n\nOPTIONS\n  --allGroups                                            Revoke all votes from all\n                                                         groups\n\n  --allVotes                                             Revoke all votes\n\n  --contract=0xc1912fEE45d61C87Cc5EA59DaE31190FFFFf232d  (required) Address of the\n                                                         ReleaseGold Contract\n\n  --globalHelp                                           View all available global flags\n\n  --group=0xc1912fEE45d61C87Cc5EA59DaE31190FFFFf232d     Address of the group to revoke\n                                                         votes from\n\n  --votes=votes                                          The number of votes to revoke\n\nEXAMPLES\n  revoke-votes --contract 0x47e172F6CfB6c7D01C1574fa3E2Be7CC73269D95 --group\n  0x5409ED021D9299bf6814279A6A1411A7e866A631 --votes 100\n\n  revoke-votes --contract 0x47e172F6CfB6c7D01C1574fa3E2Be7CC73269D95 --allVotes\n  --allGroups\n")),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"See code: ",(0,o.kt)("a",{parentName:"em",href:"https://github.com/celo-org/celo-monorepo/tree/master/packages/cli/src/commands/releasegold/revoke-votes.ts"},"src/commands/releasegold/revoke-votes.ts"))),(0,o.kt)("h2",{id:"celocli-releasegoldset-account"},(0,o.kt)("inlineCode",{parentName:"h2"},"celocli releasegold:set-account")),(0,o.kt)("p",null,"Set account properties of the ReleaseGold instance account such as name, data encryption key, and the metadata URL"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Set account properties of the ReleaseGold instance account such as name, data encryption key, and the metadata URL\n\nUSAGE\n  $ celocli releasegold:set-account\n\nOPTIONS\n  -p, --property=name|dataEncryptionKey|metaURL          (required) Property type to set\n\n  -v, --value=value                                      (required) Property value to\n                                                         set\n\n  --contract=0xc1912fEE45d61C87Cc5EA59DaE31190FFFFf232d  (required) Address of the\n                                                         ReleaseGold Contract\n\n  --globalHelp                                           View all available global flags\n\nEXAMPLES\n  set-account --contract 0x5719118266779B58D0f9519383A4A27aA7b829E5 --property name\n  --value mywallet\n\n  set-account --contract 0x5719118266779B58D0f9519383A4A27aA7b829E5 --property\n  dataEncryptionKey --value\n  0x041bb96e35f9f4b71ca8de561fff55a249ddf9d13ab582bdd09a09e75da68ae4cd0ab7038030f41b2374\n  98b4d76387ae878dc8d98fd6f6db2c15362d1a3bf11216\n\n  set-account --contract 0x5719118266779B58D0f9519383A4A27aA7b829E5 --property metaURL\n  --value www.test.com\n")),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"See code: ",(0,o.kt)("a",{parentName:"em",href:"https://github.com/celo-org/celo-monorepo/tree/master/packages/cli/src/commands/releasegold/set-account.ts"},"src/commands/releasegold/set-account.ts"))),(0,o.kt)("h2",{id:"celocli-releasegoldset-account-wallet-address"},(0,o.kt)("inlineCode",{parentName:"h2"},"celocli releasegold:set-account-wallet-address")),(0,o.kt)("p",null,"Set the ReleaseGold contract account's wallet address"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Set the ReleaseGold contract account's wallet address\n\nUSAGE\n  $ celocli releasegold:set-account-wallet-address\n\nOPTIONS\n  --contract=0xc1912fEE45d61C87Cc5EA59DaE31190FFFFf232d\n      (required) Address of the ReleaseGold Contract\n\n  --globalHelp\n      View all available global flags\n\n  --pop=pop\n      ECDSA PoP for signer over contract's account\n\n  --walletAddress=0xc1912fEE45d61C87Cc5EA59DaE31190FFFFf232d\n      (required) Address of wallet to set for contract's account and signer of PoP. 0x0 if\n      owner wants payers to contact them directly.\n\nEXAMPLE\n  set-account-wallet-address --contract 0x5409ED021D9299bf6814279A6A1411A7e866A631\n  --walletAddress 0xE36Ea790bc9d7AB70C55260C66D52b1eca985f84 --pop\n  0x1b3e611d05e46753c43444cdc55c2cc3d95c54da0eba2464a8cc8cb01bd57ae8bb3d82a0e293ca97e581\n  3e7fb9b624127f42ef0871d025d8a56fe2f8f08117e25b\n")),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"See code: ",(0,o.kt)("a",{parentName:"em",href:"https://github.com/celo-org/celo-monorepo/tree/master/packages/cli/src/commands/releasegold/set-account-wallet-address.ts"},"src/commands/releasegold/set-account-wallet-address.ts"))),(0,o.kt)("h2",{id:"celocli-releasegoldset-beneficiary"},(0,o.kt)("inlineCode",{parentName:"h2"},"celocli releasegold:set-beneficiary")),(0,o.kt)("p",null,"Set the beneficiary of the ReleaseGold contract. This command is gated via a multi-sig, so this is expected to be called twice: once by the contract's beneficiary and once by the contract's releaseOwner. Once both addresses call this command with the same parameters, the tx will execute."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Set the beneficiary of the ReleaseGold contract. This command is gated via a multi-sig, so this is expected to be called twice: once by the contract's beneficiary and once by the contract's releaseOwner. Once both addresses call this command with the same parameters, the tx will execute.\n\nUSAGE\n  $ celocli releasegold:set-beneficiary\n\nOPTIONS\n  --beneficiary=0xc1912fEE45d61C87Cc5EA59DaE31190FFFFf232d  (required) Address of the\n                                                            new beneficiary\n\n  --contract=0xc1912fEE45d61C87Cc5EA59DaE31190FFFFf232d     (required) Address of the\n                                                            ReleaseGold Contract\n\n  --from=0xc1912fEE45d61C87Cc5EA59DaE31190FFFFf232d         (required) Address to submit\n                                                            multisig transaction from\n                                                            (one of the owners)\n\n  --globalHelp                                              View all available global\n                                                            flags\n\n  --yesreally                                               Override prompt to set new\n                                                            beneficiary (be careful!)\n\nEXAMPLE\n  set-beneficiary --contract 0x5409ED021D9299bf6814279A6A1411A7e866A631 --from\n  0xE36Ea790bc9d7AB70C55260C66D52b1eca985f84 --beneficiary\n  0x6Ecbe1DB9EF729CBe972C83Fb886247691Fb6beb\n")),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"See code: ",(0,o.kt)("a",{parentName:"em",href:"https://github.com/celo-org/celo-monorepo/tree/master/packages/cli/src/commands/releasegold/set-beneficiary.ts"},"src/commands/releasegold/set-beneficiary.ts"))),(0,o.kt)("h2",{id:"celocli-releasegoldset-can-expire"},(0,o.kt)("inlineCode",{parentName:"h2"},"celocli releasegold:set-can-expire")),(0,o.kt)("p",null,"Set the canExpire flag for the given ReleaseGold contract"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Set the canExpire flag for the given ReleaseGold contract\n\nUSAGE\n  $ celocli releasegold:set-can-expire\n\nOPTIONS\n  --contract=0xc1912fEE45d61C87Cc5EA59DaE31190FFFFf232d  (required) Address of the\n                                                         ReleaseGold Contract\n\n  --globalHelp                                           View all available global flags\n\n  --value=(true|false|True|False)                        (required) canExpire value\n\n  --yesreally                                            Override prompt to set\n                                                         expiration flag (be careful!)\n\nEXAMPLE\n  set-can-expire --contract 0x5409ED021D9299bf6814279A6A1411A7e866A631 --value true\n")),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"See code: ",(0,o.kt)("a",{parentName:"em",href:"https://github.com/celo-org/celo-monorepo/tree/master/packages/cli/src/commands/releasegold/set-can-expire.ts"},"src/commands/releasegold/set-can-expire.ts"))),(0,o.kt)("h2",{id:"celocli-releasegoldset-liquidity-provision"},(0,o.kt)("inlineCode",{parentName:"h2"},"celocli releasegold:set-liquidity-provision")),(0,o.kt)("p",null,"Set the liquidity provision to true, allowing the beneficiary to withdraw released gold."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Set the liquidity provision to true, allowing the beneficiary to withdraw released gold.\n\nUSAGE\n  $ celocli releasegold:set-liquidity-provision\n\nOPTIONS\n  --contract=0xc1912fEE45d61C87Cc5EA59DaE31190FFFFf232d  (required) Address of the\n                                                         ReleaseGold Contract\n\n  --globalHelp                                           View all available global flags\n\n  --yesreally                                            Override prompt to set\n                                                         liquidity (be careful!)\n\nEXAMPLE\n  set-liquidity-provision --contract 0x5409ED021D9299bf6814279A6A1411A7e866A631\n")),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"See code: ",(0,o.kt)("a",{parentName:"em",href:"https://github.com/celo-org/celo-monorepo/tree/master/packages/cli/src/commands/releasegold/set-liquidity-provision.ts"},"src/commands/releasegold/set-liquidity-provision.ts"))),(0,o.kt)("h2",{id:"celocli-releasegoldset-max-distribution"},(0,o.kt)("inlineCode",{parentName:"h2"},"celocli releasegold:set-max-distribution")),(0,o.kt)("p",null,"Set the maximum distribution of gold for the given contract"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Set the maximum distribution of gold for the given contract\n\nUSAGE\n  $ celocli releasegold:set-max-distribution\n\nOPTIONS\n  --contract=0xc1912fEE45d61C87Cc5EA59DaE31190FFFFf232d  (required) Address of the\n                                                         ReleaseGold Contract\n\n  --distributionRatio=distributionRatio                  (required) Amount in range [0,\n                                                         1000] (3 significant figures)\n                                                         indicating % of total balance\n                                                         available for distribution.\n\n  --globalHelp                                           View all available global flags\n\n  --yesreally                                            Override prompt to set new\n                                                         maximum distribution (be\n                                                         careful!)\n\nEXAMPLE\n  set-max-distribution --contract 0x5409ED021D9299bf6814279A6A1411A7e866A631\n  --distributionRatio 1000\n")),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"See code: ",(0,o.kt)("a",{parentName:"em",href:"https://github.com/celo-org/celo-monorepo/tree/master/packages/cli/src/commands/releasegold/set-max-distribution.ts"},"src/commands/releasegold/set-max-distribution.ts"))),(0,o.kt)("h2",{id:"celocli-releasegoldshow"},(0,o.kt)("inlineCode",{parentName:"h2"},"celocli releasegold:show")),(0,o.kt)("p",null,"Show info on a ReleaseGold instance contract."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Show info on a ReleaseGold instance contract.\n\nUSAGE\n  $ celocli releasegold:show\n\nOPTIONS\n  --contract=0xc1912fEE45d61C87Cc5EA59DaE31190FFFFf232d  (required) Address of the\n                                                         ReleaseGold Contract\n\n  --globalHelp                                           View all available global flags\n\nEXAMPLE\n  show --contract 0x47e172F6CfB6c7D01C1574fa3E2Be7CC73269D95\n")),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"See code: ",(0,o.kt)("a",{parentName:"em",href:"https://github.com/celo-org/celo-monorepo/tree/master/packages/cli/src/commands/releasegold/show.ts"},"src/commands/releasegold/show.ts"))),(0,o.kt)("h2",{id:"celocli-releasegoldtransfer-dollars"},(0,o.kt)("inlineCode",{parentName:"h2"},"celocli releasegold:transfer-dollars")),(0,o.kt)("p",null,"Transfer Celo Dollars from the given contract address. Dollars may be accrued to the ReleaseGold contract via validator epoch rewards."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Transfer Celo Dollars from the given contract address. Dollars may be accrued to the ReleaseGold contract via validator epoch rewards.\n\nUSAGE\n  $ celocli releasegold:transfer-dollars\n\nOPTIONS\n  --contract=0xc1912fEE45d61C87Cc5EA59DaE31190FFFFf232d  (required) Address of the\n                                                         ReleaseGold Contract\n\n  --globalHelp                                           View all available global flags\n\n  --to=0xc1912fEE45d61C87Cc5EA59DaE31190FFFFf232d        (required) Address of the\n                                                         recipient of Celo Dollars\n                                                         transfer\n\n  --value=10000000000000000000000                        (required) Value (in Wei) of\n                                                         Celo Dollars to transfer\n\nEXAMPLE\n  transfer-dollars --contract 0x5409ED021D9299bf6814279A6A1411A7e866A631 --to\n  0x6Ecbe1DB9EF729CBe972C83Fb886247691Fb6beb --value 10000000000000000000000\n")),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"See code: ",(0,o.kt)("a",{parentName:"em",href:"https://github.com/celo-org/celo-monorepo/tree/master/packages/cli/src/commands/releasegold/transfer-dollars.ts"},"src/commands/releasegold/transfer-dollars.ts"))),(0,o.kt)("h2",{id:"celocli-releasegoldwithdraw"},(0,o.kt)("inlineCode",{parentName:"h2"},"celocli releasegold:withdraw")),(0,o.kt)("p",null,"Withdraws ",(0,o.kt)("inlineCode",{parentName:"p"},"value")," released gold to the beneficiary address. Fails if ",(0,o.kt)("inlineCode",{parentName:"p"},"value")," worth of gold has not been released yet."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Withdraws `value` released gold to the beneficiary address. Fails if `value` worth of gold has not been released yet.\n\nUSAGE\n  $ celocli releasegold:withdraw\n\nOPTIONS\n  --contract=0xc1912fEE45d61C87Cc5EA59DaE31190FFFFf232d  (required) Address of the\n                                                         ReleaseGold Contract\n\n  --globalHelp                                           View all available global flags\n\n  --value=10000000000000000000000                        (required) Amount of released\n                                                         gold (in wei) to withdraw\n\nEXAMPLE\n  withdraw --contract 0x5409ED021D9299bf6814279A6A1411A7e866A631 --value\n  10000000000000000000000\n")),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"See code: ",(0,o.kt)("a",{parentName:"em",href:"https://github.com/celo-org/celo-monorepo/tree/master/packages/cli/src/commands/releasegold/withdraw.ts"},"src/commands/releasegold/withdraw.ts"))))}p.isMDXComponent=!0}}]);