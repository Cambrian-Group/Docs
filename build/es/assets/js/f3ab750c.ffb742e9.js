"use strict";(self.webpackChunkcelo_docs=self.webpackChunkcelo_docs||[]).push([[1255],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return m}});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=c(n),m=a,h=u["".concat(l,".").concat(m)]||u[m]||d[m]||o;return n?r.createElement(h,s(s({ref:t},p),{},{components:n})):r.createElement(h,s({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,s=new Array(o);s[0]=u;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:a,s[1]=i;for(var c=2;c<o;c++)s[c]=n[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},8992:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return i},contentTitle:function(){return l},metadata:function(){return c},toc:function(){return p},default:function(){return u}});var r=n(83117),a=n(80102),o=(n(67294),n(3905)),s=["components"],i={title:"Celo Ethers.js Wrapper",description:"A minimal wrapper to make Ethers.JS compatible with the Celo network."},l="Celo Ethers.JS Wrapper",c={unversionedId:"developer-resources/ethers-js-wrapper",id:"developer-resources/ethers-js-wrapper",title:"Celo Ethers.js Wrapper",description:"A minimal wrapper to make Ethers.JS compatible with the Celo network.",source:"@site/docs/developer-resources/ethers-js-wrapper.md",sourceDirName:"developer-resources",slug:"/developer-resources/ethers-js-wrapper",permalink:"/es/developer-resources/ethers-js-wrapper",editUrl:"",tags:[],version:"current",frontMatter:{title:"Celo Ethers.js Wrapper",description:"A minimal wrapper to make Ethers.JS compatible with the Celo network."}},p=[{value:"Install",id:"install",children:[],level:2},{value:"Basic Usage",id:"basic-usage",children:[],level:2},{value:"Contract Interaction",id:"contract-interaction",children:[],level:2},{value:"Alternative gas fee currencies",id:"alternative-gas-fee-currencies",children:[],level:2}],d={toc:p};function u(e){var t=e.components,n=(0,a.Z)(e,s);return(0,o.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"celo-ethersjs-wrapper"},"Celo Ethers.JS Wrapper"),(0,o.kt)("p",null,"A minimal wrapper to make Ethers.JS compatible with the Celo network."),(0,o.kt)("hr",null),(0,o.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"This is still experimental. ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/celo-tools/celo-ethers-wrapper"},"View on GitHub")))),(0,o.kt)("h2",{id:"install"},"Install"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"npm i @celo-tools/celo-ethers-wrapper")),(0,o.kt)("p",null,"or"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"yarn add @celo-tools/celo-ethers-wrapper")),(0,o.kt)("p",null,"Note this wrapper has Ethers v5 as a peer dependency. Your project must include a dependency on that as well."),(0,o.kt)("h2",{id:"basic-usage"},"Basic Usage"),(0,o.kt)("p",null,"Connect to the network by creating a ",(0,o.kt)("inlineCode",{parentName:"p"},"CeloProvider"),", which is based on ",(0,o.kt)("a",{parentName:"p",href:"https://docs.ethers.io/v5/api/providers/jsonrpc-provider/"},"JsonRpc-Provider"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'import { CeloProvider } from "@celo-tools/celo-ethers-wrapper";\n\n// Connecting to Alfajores testnet\nconst provider = new CeloProvider("https://alfajores-forno.celo-testnet.org");\nawait provider.ready;\n')),(0,o.kt)("p",null,"Note: for a more efficient provider based on ",(0,o.kt)("a",{parentName:"p",href:"https://docs.ethers.io/v5/api/providers/jsonrpc-provider/#StaticJsonRpcProvider"},"StaticJsonRpcProvider")," you can use ",(0,o.kt)("inlineCode",{parentName:"p"},"StaticCeloProvider")," instead."),(0,o.kt)("p",null,"Next, Create a CeloWallet, which is based on ",(0,o.kt)("a",{parentName:"p",href:"https://docs.ethers.io/v5/api/signer/#Wallet"},"Wallet")," :"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'import { CeloWallet } from "@celo-tools/celo-ethers-wrapper";\n\nconst wallet = new CeloWallet(YOUR_PK, provider);\n')),(0,o.kt)("p",null,"Use the provider or wallet to make calls or send transactions:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"const txResponse = await wallet.sendTransaction({\n  to: recipient,\n  value: amountInWei,\n});\nconst txReceipt = await txResponse.wait();\nconsole.info(`CELO transaction hash received: ${txReceipt.transactionHash}`);\n")),(0,o.kt)("h2",{id:"contract-interaction"},"Contract Interaction"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"CeloWallet")," can be used to send transactions."),(0,o.kt)("p",null,"Here's an example of sending cUSD with the StableToken contract. For interacting with contracts you need the ABI and address. Addresses for Celo core contracts can be found with the CLI's ",(0,o.kt)("inlineCode",{parentName:"p"},"network:contracts")," command. The ABIs can be built from the solidity code or extracted in ContractKit's ",(0,o.kt)("inlineCode",{parentName:"p"},"generated")," folder."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'import { Contract, ethers, utils, providers } from "ethers";\n\nconst stableToken = new ethers.Contract(address, abi, wallet);\nconsole.info(`Sending ${amountInWei} cUSD`);\nconst txResponse: providers.TransactionResponse =\n  await stableToken.transferWithComment(recipient, amountInWei, comment);\nconst txReceipt = await txResponse.wait();\nconsole.info(`cUSD payment hash received: ${txReceipt.transactionHash}`);\n')),(0,o.kt)("h2",{id:"alternative-gas-fee-currencies"},"Alternative gas fee currencies"),(0,o.kt)("p",null,"The Celo network supports paying for transactions with the native asset (CELO) but also with the stable token (cUSD)."),(0,o.kt)("p",null,"This wrapper currently has partial support for specifying feeCurrency in transactions."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"const gasPrice = await wallet.getGasPrice(stableTokenAddress);\nconst gasLimit = await wallet.estimateGas(tx);\n\n// Gas estimation doesn't currently work properly for non-CELO currencies\n// The gas limit must be padded to increase tx success rate\n// TODO: Investigate more efficient ways to handle this case\nconst adjustedGasLimit = gasLimit.mul(10);\n\nconst txResponse = await signer.sendTransaction({\n  ...tx,\n  gasPrice,\n  gasLimit: adjustedGasLimit,\n  feeCurrency: stableTokenAddress,\n});\n")))}u.isMDXComponent=!0}}]);