"use strict";(self.webpackChunkcelo_docs=self.webpackChunkcelo_docs||[]).push([[3440],{3905:function(e,t,o){o.d(t,{Zo:function(){return u},kt:function(){return f}});var n=o(67294);function r(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function s(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,n)}return o}function a(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?s(Object(o),!0).forEach((function(t){r(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):s(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function c(e,t){if(null==e)return{};var o,n,r=function(e,t){if(null==e)return{};var o,n,r={},s=Object.keys(e);for(n=0;n<s.length;n++)o=s[n],t.indexOf(o)>=0||(r[o]=e[o]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)o=s[n],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(r[o]=e[o])}return r}var i=n.createContext({}),l=function(e){var t=n.useContext(i),o=t;return e&&(o="function"==typeof e?e(t):a(a({},t),e)),o},u=function(e){var t=l(e.components);return n.createElement(i.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var o=e.components,r=e.mdxType,s=e.originalType,i=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),d=l(o),f=r,m=d["".concat(i,".").concat(f)]||d[f]||p[f]||s;return o?n.createElement(m,a(a({ref:t},u),{},{components:o})):n.createElement(m,a({ref:t},u))}));function f(e,t){var o=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=o.length,a=new Array(s);a[0]=d;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c.mdxType="string"==typeof e?e:r,a[1]=c;for(var l=2;l<s;l++)a[l]=o[l];return n.createElement.apply(null,a)}return n.createElement.apply(null,o)}d.displayName="MDXCreateElement"},48602:function(e,t,o){o.r(t),o.d(t,{frontMatter:function(){return c},contentTitle:function(){return i},metadata:function(){return l},toc:function(){return u},default:function(){return d}});var n=o(83117),r=o(80102),s=(o(67294),o(3905)),a=["components"],c={title:"Consensus Introduction",description:"Overview of Celo's consensus protocol and network validators.",slug:"/celo-codebase/protocol/consensus"},i="Consensus",l={unversionedId:"celo-codebase/protocol/consensus/index",id:"celo-codebase/protocol/consensus/index",title:"Consensus Introduction",description:"Overview of Celo's consensus protocol and network validators.",source:"@site/docs/celo-codebase/protocol/consensus/index.md",sourceDirName:"celo-codebase/protocol/consensus",slug:"/celo-codebase/protocol/consensus",permalink:"/es/celo-codebase/protocol/consensus",editUrl:"https://celo.crowdin.com/celo-docs/es",tags:[],version:"current",frontMatter:{title:"Consensus Introduction",description:"Overview of Celo's consensus protocol and network validators.",slug:"/celo-codebase/protocol/consensus"},sidebar:"docs",previous:{title:"Celo Protocol",permalink:"/es/celo-codebase/protocol"},next:{title:"Validator Set Differences",permalink:"/es/celo-codebase/protocol/consensus/validator-set-differences"}},u=[{value:"Protocol",id:"protocol",children:[],level:2},{value:"Validators",id:"validators",children:[],level:2}],p={toc:u};function d(e){var t=e.components,o=(0,r.Z)(e,a);return(0,s.kt)("wrapper",(0,n.Z)({},p,o,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"consensus"},"Consensus"),(0,s.kt)("p",null,"Overview of Celo's consensus protocol and network validators."),(0,s.kt)("hr",null),(0,s.kt)("h2",{id:"protocol"},"Protocol"),(0,s.kt)("p",null,"Celo\u2019s consensus protocol is based on an implementation called Istanbul, or IBFT. IBFT was developed by AMIS and ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/ethereum/EIPs/issues/650"},"proposed")," as an extension to ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/ethereum/go-ethereum"},"go-ethereum")," but never merged. Variants of IBFT exist in both the ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/jpmorganchase/quorum"},"Quorum")," and ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/PegaSysEng/pantheon"},"Pantheon")," clients.  We\u2019ve modified Istanbul to bring it up to date with the latest ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/ethereum/go-ethereum"},"go-ethereum")," releases and we\u2019re fixing ",(0,s.kt)("a",{parentName:"p",href:"https://arxiv.org/abs/1901.07160"},"correctness and liveness issues")," and improving its scalability and security."),(0,s.kt)("h2",{id:"validators"},"Validators"),(0,s.kt)("p",null,"Celo\u2019s consensus protocol is performed by nodes that are selected as validators. There is a maximum cap on the number of active validators that can be changed by governance proposal, which is currently set at 110 validators. The active validator set is determined via the proof-of-stake process and is updated at the end of each epoch, a fixed period of approximately one day."))}d.isMDXComponent=!0}}]);