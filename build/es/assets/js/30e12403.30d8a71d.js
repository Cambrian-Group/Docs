"use strict";(self.webpackChunkcelo_docs=self.webpackChunkcelo_docs||[]).push([[6598],{3905:function(e,t,a){a.d(t,{Zo:function(){return u},kt:function(){return m}});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),c=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},u=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=c(a),m=r,k=p["".concat(s,".").concat(m)]||p[m]||d[m]||o;return a?n.createElement(k,l(l({ref:t},u),{},{components:a})):n.createElement(k,l({ref:t},u))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,l=new Array(o);l[0]=p;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:r,l[1]=i;for(var c=2;c<o;c++)l[c]=a[c];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}p.displayName="MDXCreateElement"},58215:function(e,t,a){var n=a(67294);t.Z=function(e){var t=e.children,a=e.hidden,r=e.className;return n.createElement("div",{role:"tabpanel",hidden:a,className:r},t)}},26396:function(e,t,a){a.d(t,{Z:function(){return p}});var n=a(83117),r=a(67294),o=a(72389),l=a(79443);var i=function(){var e=(0,r.useContext)(l.Z);if(null==e)throw new Error('"useUserPreferencesContext" is used outside of "Layout" component.');return e},s=a(16681),c=a(86010),u="tabItem_vU9c";function d(e){var t,a,o,l=e.lazy,d=e.block,p=e.defaultValue,m=e.values,k=e.groupId,h=e.className,f=r.Children.map(e.children,(function(e){if((0,r.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),v=null!=m?m:f.map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes}})),g=(0,s.lx)(v,(function(e,t){return e.value===t.value}));if(g.length>0)throw new Error('Docusaurus error: Duplicate values "'+g.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var w=null===p?p:null!=(t=null!=p?p:null==(a=f.find((function(e){return e.props.default})))?void 0:a.props.value)?t:null==(o=f[0])?void 0:o.props.value;if(null!==w&&!v.some((function(e){return e.value===w})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+w+'" but none of its children has the corresponding value. Available values are: '+v.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var b=i(),y=b.tabGroupChoices,N=b.setTabGroupChoices,C=(0,r.useState)(w),E=C[0],T=C[1],M=[],A=(0,s.o5)().blockElementScrollPositionUntilNextRender;if(null!=k){var S=y[k];null!=S&&S!==E&&v.some((function(e){return e.value===S}))&&T(S)}var x=function(e){var t=e.currentTarget,a=M.indexOf(t),n=v[a].value;n!==E&&(A(t),T(n),null!=k&&N(k,n))},O=function(e){var t,a=null;switch(e.key){case"ArrowRight":var n=M.indexOf(e.currentTarget)+1;a=M[n]||M[0];break;case"ArrowLeft":var r=M.indexOf(e.currentTarget)-1;a=M[r]||M[M.length-1]}null==(t=a)||t.focus()};return r.createElement("div",{className:"tabs-container"},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,c.Z)("tabs",{"tabs--block":d},h)},v.map((function(e){var t=e.value,a=e.label,o=e.attributes;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:E===t?0:-1,"aria-selected":E===t,key:t,ref:function(e){return M.push(e)},onKeyDown:O,onFocus:x,onClick:x},o,{className:(0,c.Z)("tabs__item",u,null==o?void 0:o.className,{"tabs__item--active":E===t})}),null!=a?a:t)}))),l?(0,r.cloneElement)(f.filter((function(e){return e.props.value===E}))[0],{className:"margin-vert--md"}):r.createElement("div",{className:"margin-vert--md"},f.map((function(e,t){return(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==E})}))))}function p(e){var t=(0,o.Z)();return r.createElement(d,(0,n.Z)({key:String(t)},e))}},57613:function(e,t,a){a.r(t),a.d(t,{frontMatter:function(){return c},contentTitle:function(){return u},metadata:function(){return d},toc:function(){return p},default:function(){return k}});var n=a(83117),r=a(80102),o=(a(67294),a(3905)),l=a(26396),i=a(58215),s=["components"],c={title:"MetaMask Programmatic Setup on Celo",description:"How dApp developers can use MetaMask to interact with the Celo network."},u="Programmatic Setup",d={unversionedId:"getting-started/wallets/using-metamask-with-celo/programmatic-setup",id:"getting-started/wallets/using-metamask-with-celo/programmatic-setup",title:"MetaMask Programmatic Setup on Celo",description:"How dApp developers can use MetaMask to interact with the Celo network.",source:"@site/docs/getting-started/wallets/using-metamask-with-celo/programmatic-setup.md",sourceDirName:"getting-started/wallets/using-metamask-with-celo",slug:"/getting-started/wallets/using-metamask-with-celo/programmatic-setup",permalink:"/es/getting-started/wallets/using-metamask-with-celo/programmatic-setup",editUrl:"https://celo.crowdin.com/celo-docs/es",tags:[],version:"current",frontMatter:{title:"MetaMask Programmatic Setup on Celo",description:"How dApp developers can use MetaMask to interact with the Celo network."},sidebar:"docs",previous:{title:"MetaMask Manual Setup on Celo",permalink:"/es/getting-started/wallets/using-metamask-with-celo/manual-setup"},next:{title:"Import Valora Wallet to MetaMask",permalink:"/es/getting-started/wallets/using-metamask-with-celo/metamask-valora-import"}},p=[{value:"How to Add Celo to MetaMask",id:"how-to-add-celo-to-metamask",children:[],level:2},{value:"Adding a Celo Network to MetaMask",id:"adding-a-celo-network-to-metamask",children:[],level:2},{value:"Adding Tokens (e.g. cUSD, cEUR)",id:"adding-tokens-eg-cusd-ceur",children:[],level:2},{value:"Handling cases where MetaMask is connected to a different network",id:"handling-cases-where-metamask-is-connected-to-a-different-network",children:[],level:2}],m={toc:p};function k(e){var t=e.components,a=(0,r.Z)(e,s);return(0,o.kt)("wrapper",(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"programmatic-setup"},"Programmatic Setup"),(0,o.kt)("p",null,"How dApp developers can use MetaMask to interact with the Celo network."),(0,o.kt)("hr",null),(0,o.kt)("h2",{id:"how-to-add-celo-to-metamask"},"How to Add Celo to MetaMask"),(0,o.kt)("p",null,"For dApp Developers interested in using MetaMask with Celo, we encourage doing the following 3 things, which are described in detail in the below sections."),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Add the Network"),(0,o.kt)("li",{parentName:"ol"},"Add Celo tokens ","(","e.g. cUSD, cEUR",")"),(0,o.kt)("li",{parentName:"ol"},"Handle cases where MetaMask is connected to a different network")),(0,o.kt)("h2",{id:"adding-a-celo-network-to-metamask"},"Adding a Celo Network to MetaMask"),(0,o.kt)("p",null,"To add a Celo Network to your dApp, you can use MetaMask's RPC API's ",(0,o.kt)("inlineCode",{parentName:"p"},"wallet_addEthereumChain")," method. ","(",(0,o.kt)("a",{parentName:"p",href:"https://docs.metamask.io/guide/rpc-api.html#wallet-addethereumchain"},"See documentation"),")","."),(0,o.kt)("p",null,"Here is a JavaScript snippet you can use:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"await window.ethereum.request({\n    method: 'wallet_addEthereumChain',\n    params: [<INSERT_NETWORK_PARAMS_HERE>],\n});\n")),(0,o.kt)("p",null,"Where it says ",(0,o.kt)("inlineCode",{parentName:"p"},"INSERT_NETWORK_PARAMS_HERE"),", please replace with any of the following constants, depending on which network you'd like to connect to."),(0,o.kt)(l.Z,{defaultValue:"celo",values:[{label:"Celo Mainnet",value:"celo"},{label:"Alfajores Testnet",value:"alfajores"},{label:"Baklava Testnet",value:"baklava"}],mdxType:"Tabs"},(0,o.kt)(i.Z,{value:"celo",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"const CELO_PARAMS = {\n    chainId: '0xa4ec',\n    chainName: 'Celo',\n    nativeCurrency: { name: 'Celo', symbol: 'CELO', decimals: 18 }, rpcUrls: ['https://forno.celo.org'],\n    blockExplorerUrls: ['https://explorer.celo.org/'],\n    iconUrls: ['future'],\n};\n"))),(0,o.kt)(i.Z,{value:"alfajores",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"const ALFAJORES_PARAMS = {\n    chainId: '0xaef3',\n    chainName: 'Alfajores Testnet',\n    nativeCurrency: { name: \"Alfajores Celo\", symbol: 'A-CELO', decimals: 18 },\n    rpcUrls: ['https://alfajores-forno.celo-testnet.org'],\n    blockExplorerUrls: ['https://alfajores-blockscout.celo-testnet.org/'],\n    iconUrls: ['future'],\n};\n"))),(0,o.kt)(i.Z,{value:"baklava",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"const BAKLAVA_PARAMS = {\n    chainId: '0xf370',\n    chainName: 'Baklava Testnet',\n    nativeCurrency: { name: \"Baklava Celo\", symbol: 'B-CELO', decimals: 18 },\n    rpcUrls: ['https://baklava-forno.celo-testnet.org'],\n    blockExplorerUrls: ['https://baklava-blockscout.celo-testnet.org/'],\n    iconUrls: ['future'],\n};\n")))),">",(0,o.kt)("h2",{id:"adding-tokens-eg-cusd-ceur"},"Adding Tokens ","(","e.g. cUSD, cEUR",")"),(0,o.kt)("p",null,"To watch an asset on a Celo netowork ","(","e.g. cUSD, cEUR",")"," in your dApp, you can use MetaMask's RPC API's ",(0,o.kt)("inlineCode",{parentName:"p"},"wallet_watchAsset")," method. ","(",(0,o.kt)("a",{parentName:"p",href:"https://docs.metamask.io/guide/rpc-api.html#wallet-watchasset"},"See documentation"),")","."),(0,o.kt)("p",null,"Here is a JavaScript snippet you can use:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"await window.ethereum.request({\n    method: 'wallet_watchAsset',\n    params: {\n        type: 'ERC20',\n        options: {\n            address: '<INSERT_ADDRESS_HERE>',\n            'symbol': '<INSERT_SYMBOL_HERE>',\n            decimals: 18,\n        },\n        iconUrls: ['future'],\n    },\n});\n")),(0,o.kt)("p",null,"Where it says ",(0,o.kt)("inlineCode",{parentName:"p"},"INSERT_ADDRESS_HERE"),", please replace with any of the following constants, depending on which network and which asset you'd like to connect to."),(0,o.kt)("p",null,"The following are examples for cUSD and cEUR."),(0,o.kt)(l.Z,{defaultValue:"celo",values:[{value:"celo",label:"Celo Mainnet"},{value:"alfajores",label:"Alfajores Testnet"},{value:"baklava",label:"Baklava Testnet"}],mdxType:"Tabs"},(0,o.kt)(i.Z,{value:"celo",mdxType:"TabItem"},(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Token Contract Address for cUSD: ",(0,o.kt)("inlineCode",{parentName:"li"},"0x765de816845861e75a25fca122bb6898b8b1282a")),(0,o.kt)("li",{parentName:"ul"},"Token Contract Address for cEUR: ",(0,o.kt)("inlineCode",{parentName:"li"},"0xd8763cba276a3738e6de85b4b3bf5fded6d6ca73")))),(0,o.kt)(i.Z,{value:"alfajores",mdxType:"TabItem"},(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Token Contract Address for cUSD: ",(0,o.kt)("inlineCode",{parentName:"li"},"0x874069fa1eb16d44d622f2e0ca25eea172369bc1")),(0,o.kt)("li",{parentName:"ul"},"Token Contract Address for cEUR: ",(0,o.kt)("inlineCode",{parentName:"li"},"0x10c892a6ec43a53e45d0b916b4b7d383b1b78c0f")))),(0,o.kt)(i.Z,{value:"baklava",mdxType:"TabItem"},(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Token Contract Address for cUSD: ",(0,o.kt)("inlineCode",{parentName:"li"},"0x62492A644A588FD904270BeD06ad52B9abfEA1aE")),(0,o.kt)("li",{parentName:"ul"},"Token Contract Address for cEUR: ",(0,o.kt)("inlineCode",{parentName:"li"},"0xf9ecE301247aD2CE21894941830A2470f4E774ca"))))),(0,o.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"TODO: Replace this documentation link\nTo double-check that the above values are up-to-date, please verify using the ",(0,o.kt)("inlineCode",{parentName:"p"},"celocli network:contracts")," command (",(0,o.kt)("a",{parentName:"p",href:"https://docs.celo.org/command-line-interface/commands/network#celocli-network-contracts"},"see documentation"),")","."))),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Where it says ",(0,o.kt)("inlineCode",{parentName:"li"},"INSERT_SYMBOL_HERE"),", please replace with the correct symbol for the asset you'd like to watch. For Celo Dollars, it's ",(0,o.kt)("inlineCode",{parentName:"li"},"cUSD")," and for Celo Euros, it's ",(0,o.kt)("inlineCode",{parentName:"li"},"cEUR"),".")),(0,o.kt)("h2",{id:"handling-cases-where-metamask-is-connected-to-a-different-network"},"Handling cases where MetaMask is connected to a different network"),(0,o.kt)("p",null,"We strongly suggest that you disable your dApp's functionality when MetaMask is connected to a non-Celo network."),(0,o.kt)("p",null,"MetaMask has an API for determining what network/chain you're connected to. ",(0,o.kt)("a",{parentName:"p",href:"https://docs.metamask.io/guide/ethereum-provider.html#methods"},"See here")," for more documentation around that."))}k.isMDXComponent=!0}}]);