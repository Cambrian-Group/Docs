"use strict";(self.webpackChunkcelo_docs=self.webpackChunkcelo_docs||[]).push([[3666],{3905:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return f}});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=n.createContext({}),p=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=p(e.components);return n.createElement(c.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},h=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),h=p(r),f=o,d=h["".concat(c,".").concat(f)]||h[f]||s[f]||a;return r?n.createElement(d,i(i({ref:t},u),{},{components:r})):n.createElement(d,i({ref:t},u))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=h;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var p=2;p<a;p++)i[p]=r[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}h.displayName="MDXCreateElement"},27136:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return l},contentTitle:function(){return c},metadata:function(){return p},assets:function(){return u},toc:function(){return s},default:function(){return f}});var n=r(83117),o=r(80102),a=(r(67294),r(3905)),i=["components"],l={title:"Verifying Contracts with Hardhat",description:"Learn to verify contracts on Sourcify using the hardhat-deploy plugin",slug:"hardhat-deploy-verify",authors:["josh"],tags:["hardhat","sourcify","verification"],image:"https://dl.airtable.com/.attachmentThumbnails/22e935b11333f80ed706c943717d0b49/24fbfa2e",hide_table_of_contents:!1},c=void 0,p={permalink:"/es/blog/hardhat-deploy-verify",source:"@site/blog/2021-11-30-hardhat-deploy-verify/index.md",title:"Verifying Contracts with Hardhat",description:"Learn to verify contracts on Sourcify using the hardhat-deploy plugin",date:"2021-11-30T00:00:00.000Z",formattedDate:"30 de noviembre de 2021",tags:[{label:"hardhat",permalink:"/es/blog/tags/hardhat"},{label:"sourcify",permalink:"/es/blog/tags/sourcify"},{label:"verification",permalink:"/es/blog/tags/verification"}],readingTime:1.9633333333333334,truncated:!0,authors:[{name:"Josh Crites",title:"Developer Relations, cLabs",url:"https://github.com/critesjosh",imageURL:"https://github.com/critesjosh.png",key:"josh"}],prevItem:{title:"Add Your ERC20 Token to Your Celo Wallet",permalink:"/es/blog/add-token-celo-wallet"},nextItem:{title:"Demos with ObservableHQ",permalink:"/es/blog/observable-intro"}},u={authorsImageUrls:[void 0]},s=[],h={toc:s};function f(e){var t=e.components,r=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,n.Z)({},h,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Hardhat is one of the most popular developer tools for writing contracts for EVM compatible blockchains. Hardhat is a great tool for developing smart contracts for Celo--you can find more information about this in the Celo documentation ",(0,a.kt)("a",{parentName:"p",href:"/developer-resources/deploy-hardhat"},"here"),"."),(0,a.kt)("p",null,"In this tutorial I will go over how to use the ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/wighawag/hardhat-deploy"},"hardhat-deploy plugin")," for hardhat, specifically to verify deployed contracts on the ",(0,a.kt)("a",{parentName:"p",href:"https://explorer.celo.org/"},"Celo block explorer")," via ",(0,a.kt)("a",{parentName:"p",href:"https://sourcify.dev/"},"Sourcify"),". You can verify contracts with the plugin whether you deployed them using the plugin or not."),(0,a.kt)("p",null,"In this post I will cover"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"setting up a hardhat project with the hardhat-deploy plugin"),(0,a.kt)("li",{parentName:"ul"},"deploying contracts using the plugin"),(0,a.kt)("li",{parentName:"ul"},"how to verify the contracts on sourcify")))}f.isMDXComponent=!0}}]);