"use strict";(self.webpackChunkcelo_docs=self.webpackChunkcelo_docs||[]).push([[4267],{3905:function(e,t,a){a.d(t,{Zo:function(){return p},kt:function(){return m}});var n=a(67294);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function r(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var s=n.createContext({}),d=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):r(r({},t),e)),a},p=function(e){var t=d(e.components);return n.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=d(a),m=i,h=u["".concat(s,".").concat(m)]||u[m]||c[m]||o;return a?n.createElement(h,r(r({ref:t},p),{},{components:a})):n.createElement(h,r({ref:t},p))}));function m(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=a.length,r=new Array(o);r[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:i,r[1]=l;for(var d=2;d<o;d++)r[d]=a[d];return n.createElement.apply(null,r)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},71201:function(e,t,a){a.r(t),a.d(t,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return d},toc:function(){return p},default:function(){return u}});var n=a(83117),i=a(80102),o=(a(67294),a(3905)),r=["components"],l={title:"Celo Attestation Service",descriptin:"How to configure, run, and manage an attestation service as a Celo Validator."},s="Attestation Service",d={unversionedId:"validator-guide/attestation-service",id:"validator-guide/attestation-service",title:"Celo Attestation Service",description:"How to configure, run, and manage an attestation service as a Celo Validator.",source:"@site/docs/validator-guide/attestation-service.md",sourceDirName:"validator-guide",slug:"/validator-guide/attestation-service",permalink:"/es/validator-guide/attestation-service",editUrl:"https://celo.crowdin.com/celo-docs/es",tags:[],version:"current",frontMatter:{title:"Celo Attestation Service",descriptin:"How to configure, run, and manage an attestation service as a Celo Validator."},sidebar:"validators",previous:{title:"Celo Validators",permalink:"/es/validator-guide/overview"},next:{title:"Celo Key Management Summary",permalink:"/es/validator-guide/summary"}},p=[{value:"What is an Attestation Service?",id:"what-is-an-attestation-service",children:[],level:2},{value:"Outline",id:"outline",children:[],level:2},{value:"Recent releases",id:"recent-releases",children:[],level:2},{value:"Deployment Architecture",id:"deployment-architecture",children:[],level:2},{value:"SMS Providers",id:"sms-providers",children:[{value:"Twilio",id:"twilio",children:[{value:"Verify Service (post v1.4.0)",id:"verify-service-post-v140",children:[],level:4}],level:3},{value:"Nexmo",id:"nexmo",children:[],level:3},{value:"MessageBird",id:"messagebird",children:[],level:3}],level:2},{value:"Installation",id:"installation",children:[{value:"Configuring Key Management",id:"configuring-key-management",children:[{value:"(recommended) v1.4.0+ - Using Keystore Files",id:"recommended-v140---using-keystore-files",children:[],level:4},{value:"pre-v1.4.0 - Using Celo Full Node",id:"pre-v140---using-celo-full-node",children:[],level:4}],level:3},{value:"Database Configuration",id:"database-configuration",children:[],level:3}],level:2},{value:"Configuration",id:"configuration",children:[],level:2},{value:"Registering Metadata",id:"registering-metadata",children:[],level:2},{value:"Running the Attestation Service",id:"running-the-attestation-service",children:[{value:"(recommended) Running the Attestation Service v1.4.0+",id:"recommended-running-the-attestation-service-v140",children:[],level:3},{value:"Running the Attestation Service pre-v1.4.0",id:"running-the-attestation-service-pre-v140",children:[],level:3},{value:"Delivery Receipts",id:"delivery-receipts",children:[],level:3},{value:"Test Endpoint",id:"test-endpoint",children:[],level:3}],level:2},{value:"Monitoring",id:"monitoring",children:[{value:"Logging",id:"logging",children:[],level:3},{value:"Healthcheck",id:"healthcheck",children:[],level:3},{value:"Metrics",id:"metrics",children:[],level:3},{value:"Error Responses",id:"error-responses",children:[{value:"422, Unprocessable Entity",id:"422-unprocessable-entity",children:[],level:4},{value:"404, Not Found",id:"404-not-found",children:[],level:4},{value:"403, Forbidden",id:"403-forbidden",children:[],level:4},{value:"401, Unauthorized",id:"401-unauthorized",children:[],level:4}],level:3},{value:"Blockchain",id:"blockchain",children:[],level:3},{value:"Attestation Service Dashboard",id:"attestation-service-dashboard",children:[],level:3}],level:2}],c={toc:p};function u(e){var t=e.components,a=(0,i.Z)(e,r);return(0,o.kt)("wrapper",(0,n.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"attestation-service"},"Attestation Service"),(0,o.kt)("p",null,"How to configure, run, and manage an attestation service as a Celo Validator."),(0,o.kt)("hr",null),(0,o.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"New update (as of March 2022)")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"Please check the updated provider guidance to make sure your Attestation Service complies with 10DLC regulations in the US; in particular, look at: ",(0,o.kt)("a",{parentName:"p",href:"#verify-service-post-v140"},"Twilio")," and ",(0,o.kt)("a",{parentName:"p",href:"#messagebird"},"Messagebird")," configuration guidance below."))),(0,o.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"Celo Validators are strongly encouraged to operate an ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/celo-org/celo-monorepo/tree/master/packages/attestation-service"},"Attestation Service")," instance. If you are a recipient of or considering applying to receive ",(0,o.kt)("a",{parentName:"p",href:"/es/validator-guide/celo-foundation-voting-policy"},"votes from the Celo Foundation"),", running a reliable Attestation Service is a requirement for eligibility."))),(0,o.kt)("h2",{id:"what-is-an-attestation-service"},"What is an Attestation Service?"),(0,o.kt)("p",null,"The Attestation Service is part of the ",(0,o.kt)("a",{parentName:"p",href:"/celo-codebase/protocol/identity"},"Celo identity protocol"),". It sends SMS on behalf of users to allow them to attest to having access to a phone number and to map that to a Celo account, securely and privately. This is shown as Steps 3 and 4 in this diagram:"),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://storage.googleapis.com/celo-website/docs/attestations-flow.jpg",alt:null})),(0,o.kt)("p",null,"Validators receive a fee (set by ",(0,o.kt)("a",{parentName:"p",href:"/es/celo-holder-guide/voting-governance"},"on-chain governance"),", currently 0.05 cUSD) for every attestation that they process and that is then successfully redeemed on-chain by the user. In a future release, validators will be able claim and withdraw this fee."),(0,o.kt)("h2",{id:"outline"},"Outline"),(0,o.kt)("p",null,"This guide steps you through setting up an Attestation Service:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Follow the instructions to set up a validator on ",(0,o.kt)("a",{parentName:"li",href:"/getting-started/mainnet/running-a-validator-in-mainnet"},"mainnet")," or ",(0,o.kt)("a",{parentName:"li",href:"/getting-started/baklava-testnet/running-a-validator-in-baklava"},"baklava")),(0,o.kt)("li",{parentName:"ul"},"Configure Twilio, MessageBird and Nexmo, the SMS providers used by Attestation Service"),(0,o.kt)("li",{parentName:"ul"},"Generate and register an attestation signer key"),(0,o.kt)("li",{parentName:"ul"},"(for versions prior to 1.4.0) Deploy a Celo full node, with the attestation signer key unlocked"),(0,o.kt)("li",{parentName:"ul"},"Deploy the attestation service"),(0,o.kt)("li",{parentName:"ul"},"Configure and publish validator metadata so that clients can find your attestation service"),(0,o.kt)("li",{parentName:"ul"},"Configure monitoring for the attestation service and the full node (if applicable)")),(0,o.kt)("h2",{id:"recent-releases"},"Recent releases"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/celo-org/celo-monorepo/releases/tag/attestation-service-v1.5.0"},"Attestation Service v1.5.0")," (latest production release)"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/celo-org/celo-monorepo/releases/tag/attestation-service-v1.4.0"},"Attestation Service v1.4.0")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/celo-org/celo-monorepo/releases/tag/attestation-service-v1.3.0"},"Attestation Service v1.3.0")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/celo-org/celo-monorepo/releases/tag/attestation-service-v1.2.0"},"Attestation Service v1.2.0")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/celo-org/celo-monorepo/releases/tag/attestation-service-v1.1.0"},"Attestation Service v1.1.0"))),(0,o.kt)("h2",{id:"deployment-architecture"},"Deployment Architecture"),(0,o.kt)("p",null,"Attestation Service needs to expose a HTTP or HTTPS endpoint to the public Internet. This means it should not be deployed on the same physical host as a Validator, which should be firewalled to allow incoming connections only from its proxy."),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"PORT")," environment variable sets the listening port for the service on the local instance. Note that depending on your setup, this may be different from the port exposed to the public Internet."),(0,o.kt)("p",null,"Attestation Service exposes a HTTP endpoint, but it is strongly recommended that you adopt a setup that implements TLS. Attestation Service must expose the following routes to the public Internet: POST ",(0,o.kt)("inlineCode",{parentName:"p"},"/attestations"),", POST ",(0,o.kt)("inlineCode",{parentName:"p"},"/test_attestations"),", GET ",(0,o.kt)("inlineCode",{parentName:"p"},"/get_attestations"),", POST ",(0,o.kt)("inlineCode",{parentName:"p"},"/delivery_status_nexmo"),", (v1.5.0+) POST ",(0,o.kt)("inlineCode",{parentName:"p"},"/delivery_status_twilioverify"),", (v1.5.0+) POST ",(0,o.kt)("inlineCode",{parentName:"p"},"/delivery_status_twiliomessaging"),", (pre-v1.5.0) POST ",(0,o.kt)("inlineCode",{parentName:"p"},"/delivery_status_twilio"),", and (v1.2.0+) GET (not POST) ",(0,o.kt)("inlineCode",{parentName:"p"},"/delivery_status_messagebird"),". It should also expose GET ",(0,o.kt)("inlineCode",{parentName:"p"},"/status"),". Optionally you may choose to expose GET ",(0,o.kt)("inlineCode",{parentName:"p"},"/healthz")," and GET ",(0,o.kt)("inlineCode",{parentName:"p"},"/metrics"),". Note that the URL provided in the validator metadata should not include any of these suffixes."),(0,o.kt)("p",null,"From Attestation Service version 1.4.0 onwards, there are two ways of deploying the Attestation Service. We recommend that new validators use the file keystore method (instead of using a Celo full node) for key management, and that existing validators eventually migrate to the new architecture."),(0,o.kt)("p",null,"An Attestation Service prior to version 1.4.0 is usually deployed alongside a Celo full node instance, which needs to have the attestation signer key unlocked. This can be either deployed on the same physical machine, or in a VM or container on a different host."),(0,o.kt)("p",null,"While it is still possible to use the full node method described below, from version 1.4.0 onwards, it is recommended to instead deploy the Attestation Service with access to a keystore file that encrypts the attestation signer key. This allows the service to sign attestations locally instead of depending on the separate full node instance to sign attestations. The passphrase for decrypting the keystore file must be passed in as an environment variable when starting up the Attestation Service. At least one Celo Provider (environment variable ",(0,o.kt)("inlineCode",{parentName:"p"},"CELO_PROVIDERS")," (recommended) or ",(0,o.kt)("inlineCode",{parentName:"p"},"CELO_PROVIDER"),") is currently still required, in order to connect to ContractKit and read necessary information from the chain. Listing a couple of providers is recommended, as if the first node is behind or syncing, the Attestation Service will use one of the backup nodes listed. More details on this are in the ",(0,o.kt)("a",{parentName:"p",href:"#recommended-running-the-attestation-service-v140"},"Running the Attestation Service v1.4.0+")," section below. The new method of signing is expected to reduce Attestation Service errors due to the full node not being synced and generally reduce operating overhead."),(0,o.kt)("p",null,"The Attestation Service is a stateless service that uses a database to persist status of current and recently completed SMS delivery attempts. The most straightforward deployment architecture is to have a single machine or VM running three containers (two for versions 1.4.0 onwards): one the attestation service, a Celo Blockchain node (only for versions prior to 1.4.0), and a single database instance."),(0,o.kt)("p",null,"For a high availability setup, multiple instances can be deployed behind a load balancer and sharing a single database service. The load balancer should be configured with a round robin routing policy using the instances' ",(0,o.kt)("inlineCode",{parentName:"p"},"/healthz")," endpoint as a healthcheck. Deploying a high availability database setup is beyond the scope of these instructions, but is straightforward with most cloud providers. In this setup, if a delivery report for an SMS issued by one instance is received by another instance, that instance can identify the matching record in the shared database and act on the receipt to resend if necessary."),(0,o.kt)("p",null,"Every record in the database includes the issuer (i.e. validator) in its key, so a single setup like the above can be used to provide attestations for multiple validators."),(0,o.kt)("h2",{id:"sms-providers"},"SMS Providers"),(0,o.kt)("p",null,"Currently the Attestation Service supports three SMS providers:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://www.twilio.com/try-twilio"},"Twilio"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"from v1.5.0, the Attestation Service treats the Twilio Messaging Service (",(0,o.kt)("inlineCode",{parentName:"li"},"twiliomessaging"),") and the Twilio Verify API (",(0,o.kt)("inlineCode",{parentName:"li"},"twilioverify"),") as separate providers."))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://dashboard.nexmo.com/sign-up"},"Nexmo")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://messagebird.com/en/"},"MessageBird")," (from version 1.2.0 and later)")),(0,o.kt)("p",null,"It is recommended that you sign up with all three."),(0,o.kt)("p",null,"See the ",(0,o.kt)("a",{parentName:"p",href:"#configuration"},"Configuration")," section for information about how to specify configuration options."),(0,o.kt)("h3",{id:"twilio"},"Twilio"),(0,o.kt)("p",null,"After you sign up for Twilio at ",(0,o.kt)("a",{parentName:"p",href:"https://www.twilio.com/try-twilio"},"https://www.twilio.com/try-twilio"),", you should see your ",(0,o.kt)("inlineCode",{parentName:"p"},"ACCOUNT SID")," and your ",(0,o.kt)("inlineCode",{parentName:"p"},"AUTH_TOKEN")," in the top right of the console. You'll also want to enter in a credit card to fund the account. For most text messages, the costs are typically very low (and significantly lower than the attestation fee paid by the user). Find a more comprehensive price list at ",(0,o.kt)("a",{parentName:"p",href:"https://www.twilio.com/sms/pricing"},"https://www.twilio.com/sms/pricing"),". If there are countries that you do not want to serve, you can specify them with the ",(0,o.kt)("inlineCode",{parentName:"p"},"TWILIO_UNSUPPORTED_REGIONS")," configuration option."),(0,o.kt)("p",null,"Next, adjust the Geo settings to serve phone numbers globally under ",(0,o.kt)("a",{parentName:"p",href:"https://www.twilio.com/console/sms/settings/geo-permissions"},"https://www.twilio.com/console/sms/settings/geo-permissions"),". Otherwise, the service will not be able to send SMS to Celo's global user base and your validator will negatively impact the Celo user experience."),(0,o.kt)("p",null,"To actually be able to send SMS, you need to create a messaging service under ",(0,o.kt)("a",{parentName:"p",href:"https://www.twilio.com/console/sms/services"},"Programmable SMS > SMS"),". Provide the resulting ",(0,o.kt)("inlineCode",{parentName:"p"},"SID")," in the ",(0,o.kt)("inlineCode",{parentName:"p"},"TWILIO_MESSAGING_SERVICE_SID")," configuration variable."),(0,o.kt)("p",null,"Now that you have provisioned your messaging service, you need to buy at least 1 phone number to send SMS from. You can do so under the ",(0,o.kt)("inlineCode",{parentName:"p"},"Numbers")," option of the messaging service page. It is strongly recommended that you purchase at least a US (",(0,o.kt)("inlineCode",{parentName:"p"},"+1"),") number which seem to provide high delivery success rates. If you purchase numbers in other locales, Twilio will intelligently select the best number to send each SMS."),(0,o.kt)("h4",{id:"verify-service-post-v140"},"Verify Service (post v1.4.0)"),(0,o.kt)("p",null,"We're in the process of transitioning to ",(0,o.kt)("a",{parentName:"p",href:"https://www.twilio.com/verify"},"Twilio's Verify Service")," which will automatically manage a set of phone numbers for global reach. Create a Verify Service in the Twilio Portal by navigating to ",(0,o.kt)("a",{parentName:"p",href:"https://www.twilio.com/console/verify/services"},"Verify")," and click ",(0,o.kt)("inlineCode",{parentName:"p"},"+")," to create a new service. It's important to provide ",(0,o.kt)("inlineCode",{parentName:"p"},"Celo")," as the service friendly name, since this will show up in the text message content."),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Set the code length to ",(0,o.kt)("inlineCode",{parentName:"li"},"8 digits"),"."),(0,o.kt)("li",{parentName:"ol"},"Enter ",(0,o.kt)("inlineCode",{parentName:"li"},"sell-oh")," in the ",(0,o.kt)("inlineCode",{parentName:"li"},"TTS SERVICE NAME"),"."),(0,o.kt)("li",{parentName:"ol"},"Enable ",(0,o.kt)("inlineCode",{parentName:"li"},"SMS"),", ",(0,o.kt)("inlineCode",{parentName:"li"},"CALL"),", and ",(0,o.kt)("inlineCode",{parentName:"li"},"EMAIL")," delivery channels.")),(0,o.kt)("p",null,"After you create the Verify Service, you ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("a",{parentName:"strong",href:"https://www.twilio.com/console/support/tickets/create"},"must create a support ticket"))," to enable the ",(0,o.kt)("inlineCode",{parentName:"p"},"custom code")," feature. Provide Twilio support your new Verify SID and request enabling the ",(0,o.kt)("inlineCode",{parentName:"p"},"custom code")," feature. Please monitor for a response and respond to any follow up questions."),(0,o.kt)("p",null,"Support ticket request template"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Hello, I'd like to enable custom codes for our Verify API with SID {YOUR_VERIFY_SID}. I understand that we will be charged on each attempted user verification.")),(0,o.kt)("p",null,"After Twilio enables custom codes, you'll see the following property in the Twilio dashboard when viewing your Verify Service:"),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://storage.googleapis.com/celo-website/docs/custom-code.png",alt:"Custom Code Property"})),(0,o.kt)("p",null,"Once you have confirmation that custom codes are enabled on your Twilio account, you can provide the resulting ",(0,o.kt)("inlineCode",{parentName:"p"},"SID")," in the ",(0,o.kt)("inlineCode",{parentName:"p"},"TWILIO_VERIFY_SERVICE_SID")," configuration variable and start the service. Since there are a few countries for which the Messaging Service consistently outperforms the Verify Service (and vice versa), from version v1.5.0 onwards, we treat the Messaging and Verify services as separate SMS providers which can be specified as ",(0,o.kt)("inlineCode",{parentName:"p"},"twiliomessaging")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"twilioverify"),", respectively. These providers can be specified on a per-country basis; that is, you could specify the Messaging Service to be used for a particular country by setting ",(0,o.kt)("inlineCode",{parentName:"p"},"SMS_PROVIDERS_X=twiliomessaging,nexmo,..."),". (Note that ",(0,o.kt)("inlineCode",{parentName:"p"},"twilio")," will continue to work as shorthand for ",(0,o.kt)("inlineCode",{parentName:"p"},"twiliomessaging,twilioverify"),", to maintain backwards compatibility.)"),(0,o.kt)("p",null,"For sending messages to the US, we recommend using the Twilio Verify API(provider: ",(0,o.kt)("inlineCode",{parentName:"p"},"twilioverify"),") as opposed to the Messaging Service in order to comply with 10DLC regulations (this can be specified in the ",(0,o.kt)("inlineCode",{parentName:"p"},"SMS_PROVIDERS_US")," variable). Otherwise, you may need to ",(0,o.kt)("a",{parentName:"p",href:"https://support.twilio.com/hc/en-us/articles/1260801864489-How-do-I-register-to-use-A2P-10DLC-messaging-"},"register your brand")," in order to avoid fees."),(0,o.kt)("h3",{id:"nexmo"},"Nexmo"),(0,o.kt)("p",null,"After signing up for ",(0,o.kt)("a",{parentName:"p",href:"https://dashboard.nexmo.com/sign-up"},"Nexmo"),", click the balance in the top-left to go to ",(0,o.kt)("a",{parentName:"p",href:"https://dashboard.nexmo.com/billing-and-payments"},"Billing and Payments"),", where you can add funds. It is strongly recommended that you use a credit or debit card (as opposed to other forms of payment) as you will then be able to enable ",(0,o.kt)("inlineCode",{parentName:"p"},"Auto reload"),". You should also enable ",(0,o.kt)("inlineCode",{parentName:"p"},"Low balance alerts"),". Both of these will help avoid failing to deliver SMS when your funds are exhausted. It appears that these options may not be immediately available for all new accounts due to fraud checks: try sending a few SMS, checking back after a few days, or raising a support ticket."),(0,o.kt)("p",null,"Under ",(0,o.kt)("a",{parentName:"p",href:"https://dashboard.nexmo.com/your-numbers"},"Your Numbers"),", create a US number and ensure that is enabled for SMS; this number will be used to send ",(0,o.kt)("em",{parentName:"p"},"international")," text messages. Note that Nexmo numbers appear to have a rate limit of 250 SMS per day. We recommend configuring your Attestation Service to ",(0,o.kt)("strong",{parentName:"p"},"not")," use Nexmo to serve the US (i.e. remove ",(0,o.kt)("inlineCode",{parentName:"p"},"nexmo")," in ",(0,o.kt)("inlineCode",{parentName:"p"},"SMS_PROVIDERS_US"),"). If you still want to do so, please configure a US toll-free number according to the ",(0,o.kt)("a",{parentName:"p",href:"https://www.notion.so/clabsco/10DLC-Guidance-6f23dcff502f45b4afae02254c629c61#94d870c4f85745039d4141a5343232a2"},"guidance here")," and ensure that your Attestation Service is running at ",(0,o.kt)("inlineCode",{parentName:"p"},"v1.2.2+"),"."),(0,o.kt)("p",null,"Under ",(0,o.kt)("a",{parentName:"p",href:"https://dashboard.nexmo.com/settings"},"Settings"),", copy the API key into the environment variable ",(0,o.kt)("inlineCode",{parentName:"p"},"NEXMO_KEY"),", and API secret into ",(0,o.kt)("inlineCode",{parentName:"p"},"NEXMO_SECRET"),"."),(0,o.kt)("p",null,"If you wish to partition the numbers used within this account, you may choose to create and configure a ",(0,o.kt)("a",{parentName:"p",href:"https://dashboard.nexmo.com/applications/"},"Nexmo application")," for each one. In each application, enable messaging (labeled as ",(0,o.kt)("inlineCode",{parentName:"p"},"Communicate with WhatsApp, Facebook Messenger, MMS and Viber"),") and assign a number. Copy each application's ",(0,o.kt)("inlineCode",{parentName:"p"},"Application Id")," value into the appropriate instance's ",(0,o.kt)("inlineCode",{parentName:"p"},"NEXMO_APPLICATION")," configuration value. There is no need to generate or use a public/private keypair. By default an Attestation Service will pick a number from the global pool of numbers not linked to a specific Nexmo application. The only effect of supplying ",(0,o.kt)("inlineCode",{parentName:"p"},"NEXMO_APPLICATION")," is to select numbers from those linked to that application."),(0,o.kt)("p",null,"Note that from version 1.2.0, the Attestation Service no longer requires callback URLs to be supplied in the Nexmo dashboard. This means one can support multiple Attestation Services using a single account. However to receive the delivery receipts from Nexmo, it is important to update the default HTTP method in the Nexmo dashboard to ",(0,o.kt)("inlineCode",{parentName:"p"},"POST-JSON")," (see image below or follow the ",(0,o.kt)("a",{parentName:"p",href:"https://help.nexmo.com/hc/en-us/articles/206345667"},"instructions here"),"), since the Attestation Service currently expects POST requests routed to the ",(0,o.kt)("inlineCode",{parentName:"p"},"/delivery_status_nexmo")," endpoint."),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://storage.googleapis.com/celo-website/nexmo-post-json-default-1.png",alt:null})),(0,o.kt)("h3",{id:"messagebird"},"MessageBird"),(0,o.kt)("p",null,"MessageBird support is introduced in version 1.2.0 and later. After signing up for ",(0,o.kt)("a",{parentName:"p",href:"https://messagebird.com/en/"},"MessageBird"),", locate the ",(0,o.kt)("inlineCode",{parentName:"p"},"Your API Keys")," section on the ",(0,o.kt)("a",{parentName:"p",href:"https://dashboard.messagebird.com/en/user/index"},"Dashboard"),", click ",(0,o.kt)("inlineCode",{parentName:"p"},"Show")," next to the ",(0,o.kt)("inlineCode",{parentName:"p"},"Live")," key, and copy its value into the ",(0,o.kt)("inlineCode",{parentName:"p"},"MESSAGEBIRD_API_KEY")," configuration variable. Click ",(0,o.kt)("inlineCode",{parentName:"p"},"Top Up")," to add credit. MessageBird requires a dedicated number and/or KYC approval to send SMS to certain countries that validators must support. Click ",(0,o.kt)("inlineCode",{parentName:"p"},"Numbers")," then ",(0,o.kt)("a",{parentName:"p",href:"https://dashboard.messagebird.com/en/numbers/buy/search"},"Buy Number")," to purchase a number. You will need to purchase separate numbers for both the USA (see below) and Canada. Then visit ",(0,o.kt)("a",{parentName:"p",href:"https://dashboard.messagebird.com/en/settings/sms"},"SMS Settings")," and request approval to send to these countries. You can find guidance on filling in the required information ",(0,o.kt)("a",{parentName:"p",href:"https://www.notion.so/clabsco/SMS-Provider-Validator-Support-Template-e168d45219e844e8a826c1ccefb5a06a"},"here"),"."),(0,o.kt)("p",null,"Due to 10DLC regulations from 2021, we now recommend setting up a toll-free number to serve US numbers. Please see ",(0,o.kt)("a",{parentName:"p",href:"https://www.notion.so/clabsco/10DLC-Guidance-6f23dcff502f45b4afae02254c629c61#455a4f8fcdc04804b2542b463e4e59c4"},"this page")," for more guidance on how to request a toll-free number and how to fill out the necessary form. If you do not set up a toll-free number, you must either register your brand according to the ",(0,o.kt)("a",{parentName:"p",href:"https://support.messagebird.com/hc/en-us/articles/208747865-United-States#h_01FEBCSJKT19C5BB7VPP07XJDD"},"instructions here")," OR remove ",(0,o.kt)("inlineCode",{parentName:"p"},"messagebird")," from your configuration of ",(0,o.kt)("inlineCode",{parentName:"p"},"SMS_PROVIDERS_US"),"."),(0,o.kt)("div",{className:"admonition admonition-warning alert alert--danger"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"warning")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"Failure to comply with 10DLC regulations in the US can potentially result in fines or blocked traffic."))),(0,o.kt)("h2",{id:"installation"},"Installation"),(0,o.kt)("p",null,"Where necessary, the instructions will differentiate between pre-v1.4.0 (Celo full node for key management) and v1.4.0+ (recommended use of keystore files for key management). This section uses several environment variables defined during the validator setup. You'll need to export ",(0,o.kt)("inlineCode",{parentName:"p"},"CELO_IMAGE")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"CELO_VALIDATOR_RG_ADDRESS")," on this machine."),(0,o.kt)("p",null,"Setting up an Attestation Service first requires an ",(0,o.kt)("a",{parentName:"p",href:"/es/validator-guide/summary/detailed#authorized-attestation-signers"},"Attestation Signer key")," to be registered (Similar to Validator and Vote signer keys). For that let's start our node on the Attestations machine (keep track of the password you use for this account):"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"# On the Attestation machine\ndocker run -v $PWD:/root/.celo --rm -it $CELO_IMAGE account new\nexport CELO_ATTESTATION_SIGNER_ADDRESS=<YOUR-ATTESTATION-SIGNER-ADDRESS>\n")),(0,o.kt)("p",null,"Let's generate the proof-of-possession for the attestation signer:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"# On the Attestation machine\ndocker run -v $PWD:/root/.celo --rm -it $CELO_IMAGE account proof-of-possession $CELO_ATTESTATION_SIGNER_ADDRESS $CELO_VALIDATOR_RG_ADDRESS\n")),(0,o.kt)("p",null,"With this proof, authorize the attestation signer on your local machine:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"# On your local machine\nexport CELO_ATTESTATION_SIGNER_SIGNATURE=<ATTESTATION-SIGNER-SIGNATURE>\nexport CELO_ATTESTATION_SIGNER_ADDRESS=<YOUR-ATTESTATION-SIGNER-ADDRESS>\ncelocli releasegold:authorize --contract $CELO_VALIDATOR_RG_ADDRESS --role attestation --signature 0x$CELO_ATTESTATION_SIGNER_SIGNATURE --signer $CELO_ATTESTATION_SIGNER_ADDRESS\n")),(0,o.kt)("h3",{id:"configuring-key-management"},"Configuring Key Management"),(0,o.kt)("h4",{id:"recommended-v140---using-keystore-files"},"(recommended) v1.4.0+ - Using Keystore Files"),(0,o.kt)("p",null,"It is no longer necessary to run a full node alongside the Attestation Service. Instead, save the path to the keystore directory generated above and the password used when creating the ",(0,o.kt)("inlineCode",{parentName:"p"},"CELO_ATTESTATION_SIGNER_ADDRESS")," above, as you will need these when running the service:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"export KEYSTORE_PARENT_DIR=$PWD\necho <CELO-ATTESTATION-SIGNER-PASSWORD> > $KEYSTORE_PARENT_DIR/.password\n")),(0,o.kt)("p",null,"Then, follow the instructions in the ",(0,o.kt)("a",{parentName:"p",href:"#running-the-attestation-service"},"Running the Attestation Service")," section below."),(0,o.kt)("h4",{id:"pre-v140---using-celo-full-node"},"pre-v1.4.0 - Using Celo Full Node"),(0,o.kt)("p",null,"You can now run the node for the attestation service in the background with the following command. Remember to specify the password you used during the creation of the ",(0,o.kt)("inlineCode",{parentName:"p"},"CELO_ATTESTATION_SIGNER_ADDRESS"),". And, if you want to run the attestation service for Baklava, add the ",(0,o.kt)("inlineCode",{parentName:"p"},"--baklava")," flag."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"# On the Attestation machine\necho <CELO-ATTESTATION-SIGNER-PASSWORD> > .password\ndocker run --name celo-attestations -it --restart always --stop-timeout 300 -p 127.0.0.1:8545:8545 -v $PWD:/root/.celo $CELO_IMAGE --verbosity 3 --syncmode full --http --http.addr 0.0.0.0 --http.api eth,net,web3,debug,admin --unlock $CELO_ATTESTATION_SIGNER_ADDRESS --password /root/.celo/.password --allow-insecure-unlock\n")),(0,o.kt)("h3",{id:"database-configuration"},"Database Configuration"),(0,o.kt)("p",null,"For storing and retrieving the attestation requests the service needs a database to persist that information. Currently ",(0,o.kt)("inlineCode",{parentName:"p"},"sqlite"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"postgres")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"mysql")," are supported. For testing purposes you can use ",(0,o.kt)("inlineCode",{parentName:"p"},"sqlite")," but it's recommended to run a stand-alone database server using ",(0,o.kt)("inlineCode",{parentName:"p"},"mysql")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"postgres")," if your intention is running the Attestation Service in a production environment. If you are running on a popular cloud provider, consider using their hosted SQL services."),(0,o.kt)("p",null,"Depending on your database technology you need to create a database with the access for a specific user and password."),(0,o.kt)("p",null,"For specifying the database url you need to setup the ",(0,o.kt)("inlineCode",{parentName:"p"},"DATABASE_URL")," variable in one of these ways:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'# On the Attestation machine\nexport DATABASE_URL="sqlite://db/attestation.db"\nexport DATABASE_URL="mysql://user:password@mysql.example.com:3306/attestation-service"\nexport DATABASE_URL="postgres://user:password@postgres.example.com:5432/attestation-service"\n')),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Example of setting up a local postgres database on Ubuntu"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'apt install postgresql\nsudo -u postgres createdb attestation-service\nsudo -u postgres psql -c "ALTER USER postgres PASSWORD \'<DATABASE_PASSWORD>\';"\nexport DATABASE_URL="postgres://postgres:<DATABASE_PASSWORD>@localhost:5432/attestation-service"\n')),(0,o.kt)("h2",{id:"configuration"},"Configuration"),(0,o.kt)("p",null,"Attestation Service can use its config from a file that can be specified using ",(0,o.kt)("inlineCode",{parentName:"p"},"CONFIG")," environment variable. We ",(0,o.kt)("strong",{parentName:"p"},"highly recommend")," that you start by using the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/celo-org/celo-monorepo/blob/master/packages/attestation-service/config/.env.development"},"template Attestation Service config file"),", which contains up-to-date, sensible defaults especially for ",(0,o.kt)("inlineCode",{parentName:"p"},"SMS_PROVIDERS_<country>"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"# Choose a location for the config and fetch the defaults\nexport CONFIG=/path/to/attestation-service-config\ncurl https://raw.githubusercontent.com/celo-org/celo-monorepo/master/packages/attestation-service/config/.env.development >$CONFIG\n")),(0,o.kt)("p",null,"Lines beginning ",(0,o.kt)("inlineCode",{parentName:"p"},"#")," are treated as comments. In addition, any options specified as environment variables override values provided in this file."),(0,o.kt)("p",null,"Required options:"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Variable"),(0,o.kt)("th",{parentName:"tr",align:null},"Explanation"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"DATABASE_URL")),(0,o.kt)("td",{parentName:"tr",align:null},"The URL to access the local database, e.g. ",(0,o.kt)("inlineCode",{parentName:"td"},"sqlite://db/attestations.db"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"CELO_PROVIDERS")),(0,o.kt)("td",{parentName:"tr",align:null},"(v1.4.0+) Recommended over ",(0,o.kt)("inlineCode",{parentName:"td"},"CELO_PROVIDER"),"; only one of the two may be used. A list of prioritized Celo node URLs used to connect to the chain. 2-3 providers are recommended.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"CELO_PROVIDER")),(0,o.kt)("td",{parentName:"tr",align:null},"(required pre-v1.4.0; not recommended v1.4.0+) The node URL for your local full node at which your attestation signer key is unlocked. e.g. ",(0,o.kt)("inlineCode",{parentName:"td"},"http://localhost:8545"),". Do not expose this port to the public internet! (v1.4.0+ optional) node URL for the Celo node used to connect to the chain.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"CELO_VALIDATOR_ADDRESS")),(0,o.kt)("td",{parentName:"tr",align:null},"Address of the Validator account. If Validator is deployed via a ",(0,o.kt)("inlineCode",{parentName:"td"},"ReleaseGold")," contract, this is the contract's address (i.e. ",(0,o.kt)("inlineCode",{parentName:"td"},"$CELO_VALIDATOR_RG_ADDRESS"),"), not the beneficiary.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"ATTESTATION_SIGNER_ADDRESS")),(0,o.kt)("td",{parentName:"tr",align:null},"Address of the Validator's attestation signer key")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"SMS_PROVIDERS")),(0,o.kt)("td",{parentName:"tr",align:null},"Comma-separated list of all enabled SMS providers. Can include ",(0,o.kt)("inlineCode",{parentName:"td"},"twilio"),", ",(0,o.kt)("inlineCode",{parentName:"td"},"nexmo"),". From v1.2.0, can include ",(0,o.kt)("inlineCode",{parentName:"td"},"messagebird"),". It is recommended to list ",(0,o.kt)("inlineCode",{parentName:"td"},"nexmo")," last if it is configured. From v1.5.0, can include ",(0,o.kt)("inlineCode",{parentName:"td"},"twiliomessaging")," and ",(0,o.kt)("inlineCode",{parentName:"td"},"twilioverify")," instead of ",(0,o.kt)("inlineCode",{parentName:"td"},"twilio"),". Providers are tried from first to last, unless ",(0,o.kt)("inlineCode",{parentName:"td"},"SMS_PROVIDERS_RANDOMIZED")," is set to ",(0,o.kt)("inlineCode",{parentName:"td"},"1"),", in which case they are tried in a random order.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null}),(0,o.kt)("td",{parentName:"tr",align:null})))),(0,o.kt)("p",null,"Optional environment variables:"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Variable"),(0,o.kt)("th",{parentName:"tr",align:null},"Explanation"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"ATTESTATION_SIGNER_KEYSTORE_DIRPATH")),(0,o.kt)("td",{parentName:"tr",align:null},"(v1.4.0+) Path to the ",(0,o.kt)("inlineCode",{parentName:"td"},"keystore")," directory containing the encrypted ",(0,o.kt)("inlineCode",{parentName:"td"},"ATTESTATION_SIGNER_ADDRESS"),"'s private key. Must be used with ",(0,o.kt)("inlineCode",{parentName:"td"},"ATTESTATION_SIGNER_KEYSTORE_PASSPHRASE"),".")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"ATTESTATION_SIGNER_KEYSTORE_PASSPHRASE")),(0,o.kt)("td",{parentName:"tr",align:null},"(v1.4.0+) Passphrase used to encrypt ",(0,o.kt)("inlineCode",{parentName:"td"},"ATTESTATION_SIGNER_ADDRESS"),"'s keystore file. Must be used with ",(0,o.kt)("inlineCode",{parentName:"td"},"ATTESTATION_SIGNER_KEYSTORE_DIRPATH"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"PORT")),(0,o.kt)("td",{parentName:"tr",align:null},"Port to listen on. Default ",(0,o.kt)("inlineCode",{parentName:"td"},"3000"),".")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"RATE_LIMIT_REQS_PER_MIN")),(0,o.kt)("td",{parentName:"tr",align:null},"(v1.2.0+) Requests per minute over all endpoints before new requests are rate limited. Default ",(0,o.kt)("inlineCode",{parentName:"td"},"100"),".")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"SMS_PROVIDERS_<country>")),(0,o.kt)("td",{parentName:"tr",align:null},"Override to set SMS providers and order for a specific country code (e.g ",(0,o.kt)("inlineCode",{parentName:"td"},"SMS_PROVIDERS_MX=nexmo,twilio"),"). We ",(0,o.kt)("strong",{parentName:"td"},"highly recommend")," using the ",(0,o.kt)("a",{parentName:"td",href:"https://github.com/celo-org/celo-monorepo/blob/master/packages/attestation-service/config/.env.development#L21"},"default configuration file")," as a base and then making changes accordingly.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"SMS_PROVIDERS_RANDOMIZED")),(0,o.kt)("td",{parentName:"tr",align:null},"(v1.2.0+) If set to ",(0,o.kt)("inlineCode",{parentName:"td"},"1")," and no country-specific providers are configured for the country of the number being requested, randomize the order of the default providers. Default ",(0,o.kt)("inlineCode",{parentName:"td"},"0"),". Note: setting this to ",(0,o.kt)("inlineCode",{parentName:"td"},"1")," is only recommended if you ",(0,o.kt)("em",{parentName:"td"},"do not")," have Vonage/Nexmo configured as a provider.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"MAX_DELIVERY_ATTEMPTS")),(0,o.kt)("td",{parentName:"tr",align:null},"Number of total delivery attempts when sending SMS. Each attempt tries the next available provider in the order specified. If omitted, the deprecated ",(0,o.kt)("inlineCode",{parentName:"td"},"MAX_PROVIDER_RETRIES")," option will be used. Default value is ",(0,o.kt)("inlineCode",{parentName:"td"},"3"),".")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"MAX_REREQUEST_MINS")),(0,o.kt)("td",{parentName:"tr",align:null},"Number of minutes during which the client can rerequest the same attestation. Default value is ",(0,o.kt)("inlineCode",{parentName:"td"},"55"),".")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"EXTERNAL_CALLBACK_HOSTPORT")),(0,o.kt)("td",{parentName:"tr",align:null},"Provide the full external URL at which the service can be reached, usually the same as the value of the ",(0,o.kt)("inlineCode",{parentName:"td"},"ATTESTATION_SERVICE_URL")," claim in your metadata. This value, plus a suffix e.g. ",(0,o.kt)("inlineCode",{parentName:"td"},"/delivery_status_twilioverify")," will be the URL at which service can receive delivery receipt callbacks. If this value is not set, and ",(0,o.kt)("inlineCode",{parentName:"td"},"VERIFY_CONFIG_ON_STARTUP=1")," (the default), the URL will be taken from the validator metadata. Otherwise, it must be supplied.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"VERIFY_CONFIG_ON_STARTUP")),(0,o.kt)("td",{parentName:"tr",align:null},"Refuse to start if signer or metadata is misconfigured. Default ",(0,o.kt)("inlineCode",{parentName:"td"},"1"),". If you disable this, you must specify ",(0,o.kt)("inlineCode",{parentName:"td"},"EXTERNAL_CALLBACK_HOSTPORT"),".")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"MAX_AGE_LATEST_BLOCK_SECS")),(0,o.kt)("td",{parentName:"tr",align:null},"(v1.2.0+) Maximum age of the latest received block, in seconds, before the health check reports failure. Default is ",(0,o.kt)("inlineCode",{parentName:"td"},"20"),".")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"GET_BLOCK_TIMEOUT_MS")),(0,o.kt)("td",{parentName:"tr",align:null},"(v1.4.0+) Maximum time in milliseconds to wait after fetching the latest block from a connection, before it times out. Default is ",(0,o.kt)("inlineCode",{parentName:"td"},"500 ms"),".")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"DISABLE_SMART_FALLBACK")),(0,o.kt)("td",{parentName:"tr",align:null},"(v1.4.0+) If ",(0,o.kt)("inlineCode",{parentName:"td"},"true"),", does not attempt to select the most up-to-date provider for each call, but will still retry failed calls with the backup(s). Default is ",(0,o.kt)("inlineCode",{parentName:"td"},"false"),".")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"DB_RECORD_EXPIRY_MINS")),(0,o.kt)("td",{parentName:"tr",align:null},"Time in minutes before a record of an attestation in the database may be deleted. Default 60 minutes.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"LOG_LEVEL")),(0,o.kt)("td",{parentName:"tr",align:null},"One of ",(0,o.kt)("inlineCode",{parentName:"td"},"fatal"),", ",(0,o.kt)("inlineCode",{parentName:"td"},"error"),", ",(0,o.kt)("inlineCode",{parentName:"td"},"warn"),", ",(0,o.kt)("inlineCode",{parentName:"td"},"info"),", ",(0,o.kt)("inlineCode",{parentName:"td"},"debug"),", ",(0,o.kt)("inlineCode",{parentName:"td"},"trace"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"LOG_FORMAT")),(0,o.kt)("td",{parentName:"tr",align:null},"One of ",(0,o.kt)("inlineCode",{parentName:"td"},"json"),", ",(0,o.kt)("inlineCode",{parentName:"td"},"human"),", ",(0,o.kt)("inlineCode",{parentName:"td"},"stackdriver"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"APP_SIGNATURE")),(0,o.kt)("td",{parentName:"tr",align:null},"A value that is shown under the key ",(0,o.kt)("inlineCode",{parentName:"td"},"appSignature")," field in the ",(0,o.kt)("inlineCode",{parentName:"td"},"/status")," endpoint that you can use to identify multiple instances.")))),(0,o.kt)("p",null,"Twilio configuration options:"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Variable"),(0,o.kt)("th",{parentName:"tr",align:null},"Explanation"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"TWILIO_ACCOUNT_SID")),(0,o.kt)("td",{parentName:"tr",align:null},"The Twilio account ID")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"TWILIO_MESSAGING_SERVICE_SID")),(0,o.kt)("td",{parentName:"tr",align:null},"The Twilio Message Service ID. Starts with ",(0,o.kt)("inlineCode",{parentName:"td"},"MG"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"TWILIO_VERIFY_SERVICE_SID")),(0,o.kt)("td",{parentName:"tr",align:null},"The Twilio Verify Service ID. Starts with ",(0,o.kt)("inlineCode",{parentName:"td"},"VA"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"TWILIO_AUTH_TOKEN")),(0,o.kt)("td",{parentName:"tr",align:null},"The API authentication token")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"TWILIO_UNSUPPORTED_REGIONS")),(0,o.kt)("td",{parentName:"tr",align:null},"Optional. A comma-separated list of country codes to not serve, recommended value ",(0,o.kt)("inlineCode",{parentName:"td"},"CU,SY,KP,IR,SD"))))),(0,o.kt)("p",null,"Nexmo configuration options:"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Variable"),(0,o.kt)("th",{parentName:"tr",align:null},"Explanation"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"NEXMO_KEY")),(0,o.kt)("td",{parentName:"tr",align:null},"The API key to the Nexmo API")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"NEXMO_SECRET")),(0,o.kt)("td",{parentName:"tr",align:null},"The API secret to the Nexmo API")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"NEXMO_APPLICATION")),(0,o.kt)("td",{parentName:"tr",align:null},"Optional. Use only numbers linked to the Nexmo application with matching ID, rather than the global pool.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"NEXMO_UNSUPPORTED_REGIONS")),(0,o.kt)("td",{parentName:"tr",align:null},"Optional. A comma-separated list of country codes to not serve, recommended value ",(0,o.kt)("inlineCode",{parentName:"td"},"CU,SY,KP,IR,SD"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"NEXMO_ACCOUNT_BALANCE_METRIC")),(0,o.kt)("td",{parentName:"tr",align:null},"Optional. Disabled by default. If set to ",(0,o.kt)("inlineCode",{parentName:"td"},"1"),", Nexmo balances will be published under the ",(0,o.kt)("inlineCode",{parentName:"td"},"attestation_provider_balance")," metric.")))),(0,o.kt)("p",null,"MessageBird configuration options (v1.2.0+):"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Variable"),(0,o.kt)("th",{parentName:"tr",align:null},"Explanation"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"MESSAGEBIRD_API_KEY")),(0,o.kt)("td",{parentName:"tr",align:null},"The API key to the MessageBird API")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"MESSAGEBIRD_UNSUPPORTED_REGIONS")),(0,o.kt)("td",{parentName:"tr",align:null},"Optional. A comma-separated list of country codes to not serve, recommended value ",(0,o.kt)("inlineCode",{parentName:"td"},"CU,SY,KP,IR,SD"))))),(0,o.kt)("h2",{id:"registering-metadata"},"Registering Metadata"),(0,o.kt)("p",null,"Celo uses ",(0,o.kt)("a",{parentName:"p",href:"/es/celo-codebase/protocol/identity/metadata"},"Metadata")," to allow accounts to make certain claims without having to do so on-chain. Users can use any authorized signer address to make claims on behalf of the registered Account. For convenience this guide uses the ",(0,o.kt)("inlineCode",{parentName:"p"},"CELO_ATTESTATION_SIGNER_ADDRESS"),", but any authorized signer will work. Note that metadata needs recreating if the key signing it is changed; it is recommended not to use the validator signer address since that key is typically rotated more regularly."),(0,o.kt)("p",null,"To complete the metadata process, we have to claim which URL users can request attestations from. Run the following commands on your local machine. This section uses several environment variables defined during the validator setup."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"# On your local machine\ncelocli account:create-metadata ./metadata.json --from $CELO_VALIDATOR_RG_ADDRESS\n")),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"CELO_ATTESTATION_SERVICE_URL")," variable stores the URL to access the Attestation Service deployed. In the following command we specify the URL where this Attestation Service is. Note that the URL provided in the validator metadata should be the base path at which the service is accessible; it should NOT include ",(0,o.kt)("inlineCode",{parentName:"p"},"/attestations"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"# On your local machine\ncelocli account:claim-attestation-service-url ./metadata.json --url $CELO_ATTESTATION_SERVICE_URL --from $CELO_ATTESTATION_SIGNER_ADDRESS\n")),(0,o.kt)("p",null,"You should now host your metadata somewhere reachable via HTTPS. You can use a service like ",(0,o.kt)("a",{parentName:"p",href:"https://gist.github.com"},"gist.github.com"),". Create a gist with the contents of the file and then click on the ",(0,o.kt)("inlineCode",{parentName:"p"},"Raw")," button to receive the permalink to the machine-readable file."),(0,o.kt)("p",null,"Now we can register this url for others to see. To do this, we must have the ",(0,o.kt)("inlineCode",{parentName:"p"},"beneficiary")," address of the ",(0,o.kt)("inlineCode",{parentName:"p"},"ReleaseGold")," contract (",(0,o.kt)("inlineCode",{parentName:"p"},"CELO_VALIDATOR_ADDRESS"),") unlocked."),(0,o.kt)("p",null,"(Note: If you used a Ledger to create the ",(0,o.kt)("inlineCode",{parentName:"p"},"beneficiary")," address, add the ",(0,o.kt)("inlineCode",{parentName:"p"},"--useLedger")," flag and possibly the ",(0,o.kt)("inlineCode",{parentName:"p"},"--ledgerAddresses=N")," flag to the below command. The latter flag will have the ledger check N number of addresses, e.g. ",(0,o.kt)("inlineCode",{parentName:"p"},"--ledgerAddresses=5")," would have the Ledger check 5 addresses. Don't forget to confirm the transaction on your Ledger after initiating it via the CLI.)"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"# On your local machine\ncelocli releasegold:set-account --contract $CELO_VALIDATOR_RG_ADDRESS --property metaURL --value <METADATA_URL>\n")),(0,o.kt)("p",null,"If everything goes well users should be able to see your claims by running:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"# On your local machine\ncelocli account:get-metadata $CELO_VALIDATOR_RG_ADDRESS\n")),(0,o.kt)("h2",{id:"running-the-attestation-service"},"Running the Attestation Service"),(0,o.kt)("p",null,"There is a slight difference in starting up the service depending on the keystore management option (keystore files, full node) used, and both of these are described below."),(0,o.kt)("p",null,"Before running the Attestation Service using either method, ensure that the metadata has been registered."),(0,o.kt)("p",null,"Both of the following options for running the Attestation Service use ",(0,o.kt)("inlineCode",{parentName:"p"},"--network host")," to access a local database (only works on Linux), and listen for connections on port 80."),(0,o.kt)("p",null,"They both assume that all of the configuration options needed have been added to the config file located under ",(0,o.kt)("inlineCode",{parentName:"p"},"$CONFIG")," which Docker will process. Alternatively, you can pass the config file for the service to read on startup using ",(0,o.kt)("inlineCode",{parentName:"p"},"-e CONFIG=<docker-path-to-config-file>"),", and other environment variables directly by adding arguments of the form ",(0,o.kt)("inlineCode",{parentName:"p"},"-e DATABASE_URL=$DATABASE_URL"),"."),(0,o.kt)("p",null,"For both options below, set the ",(0,o.kt)("inlineCode",{parentName:"p"},"TAG")," environment variable to determine which image to install. Use ",(0,o.kt)("inlineCode",{parentName:"p"},"attestation-service-mainnet")," for the latest image suitable for mainnet (as below), ",(0,o.kt)("inlineCode",{parentName:"p"},"attestation-service-baklava")," for the latest image suitable for baklava, or specify a specific build as given in the release notes linked above."),(0,o.kt)("h3",{id:"recommended-running-the-attestation-service-v140"},"(recommended) Running the Attestation Service v1.4.0+"),(0,o.kt)("p",null,"The main difference between the old method of running the Attestation Service alongside a Celo full node is that you will need to ensure that Docker can access the directory containing the ",(0,o.kt)("inlineCode",{parentName:"p"},"keystore")," which stores the ",(0,o.kt)("inlineCode",{parentName:"p"},"CELO_ATTESTATION_SIGNER_ADDRESS"),"'s private key as an encrypted file. Here, ",(0,o.kt)("inlineCode",{parentName:"p"},"keystore"),' just means a directory (usually titled "keystore") that contains ONLY keystore files (files that contain the password-encrypted private key in a particular format). This directory and files are automatically created by geth when importing private keys (see ',(0,o.kt)("a",{parentName:"p",href:"#recommended-v140---using-keystore-files"},"Using Keystore Files"),", and can be used here."),(0,o.kt)("p",null,"To do this, you need to map the directory containing the ",(0,o.kt)("inlineCode",{parentName:"p"},"keystore")," to the Attestation Service's Docker volume and set the environment variable ",(0,o.kt)("inlineCode",{parentName:"p"},"ATTESTATION_SIGNER_KEYSTORE_DIRPATH")," to the path to this directory relative to the Docker container. You will also need to set the environment variable ",(0,o.kt)("inlineCode",{parentName:"p"},"ATTESTATION_SIGNER_KEYSTORE_PASSPHRASE")," to the password used during the creation of the ",(0,o.kt)("inlineCode",{parentName:"p"},"CELO_ATTESTATION_SIGNER_ADDRESS"),"."),(0,o.kt)("p",null,"Additionally, ensure that the ",(0,o.kt)("inlineCode",{parentName:"p"},"CELO_PROVIDERS")," environment variable points to at least one (recommended: 2-3 in total) Celo node that can be used to instantiate ContractKit; this can be a separate full node or, depending on your configuration, your validator proxy node. The ",(0,o.kt)("inlineCode",{parentName:"p"},"CELO_PROVIDERS")," environment variable is a comma separated value list (ex. ",(0,o.kt)("inlineCode",{parentName:"p"},"CELO_PROVIDERS=http://127.0.0.1:8545,https://forno.celo.org"),"). To use your validator proxy node, you would need to allow RPC access, but for security reasons, ensure that this is locked down only to the Attestation Service. Alternatively, provide the endpoint to a Celo node that you run or to a node service provider like Figment Datahub. When passing in multiple providers to this environment variable, prioritize this list by the order in which they should be used to retry failed calls. Unless ",(0,o.kt)("inlineCode",{parentName:"p"},"DISABLE_SMART_FALLBACK")," is set, the Attestation Service will also attempt to select and use the most up-to-date connection for each call."),(0,o.kt)("p",null,"The command below illustrates what this could look like, if you used the command ",(0,o.kt)("inlineCode",{parentName:"p"},"docker run -v $PWD:/root/.celo --rm -it $CELO_IMAGE account new")," from earlier in the instructions above to create the ",(0,o.kt)("inlineCode",{parentName:"p"},"CELO_ATTESTATION_SIGNER_ADDRESS"),". Recall that you set ",(0,o.kt)("inlineCode",{parentName:"p"},"KEYSTORE_PARENT_DIR")," to the working directory (",(0,o.kt)("inlineCode",{parentName:"p"},"$PWD"),") during the instructions above, and saved the password to the file ",(0,o.kt)("inlineCode",{parentName:"p"},"KEYSTORE_PARENT_DIR/.password"),". ",(0,o.kt)("strong",{parentName:"p"},"Note that ",(0,o.kt)("inlineCode",{parentName:"strong"},"$KEYSTORE_PARENT_DIR/keystore")," must contain ONLY keystore files (no sub-directories or other file types).")," Environment variables can be set either in the ",(0,o.kt)("inlineCode",{parentName:"p"},"$CONFIG")," file or passed into the ",(0,o.kt)("inlineCode",{parentName:"p"},"docker run")," command directly using the ",(0,o.kt)("inlineCode",{parentName:"p"},"-e")," flag. (In this example, two of these variables are passed in via the ",(0,o.kt)("inlineCode",{parentName:"p"},"-e")," flag for clarity.)"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},'# We will map $KEYSTORE_PARENT_DIR:DOCKER_VOLUME_PATH later\nexport VOLUME_DIRPATH=/root/.celo\n\n# On the Attestation machine\nexport TAG=attestation-service-mainnet\ndocker run --name celo-attestation-service -it --restart always --entrypoint /bin/bash --network host --env-file $CONFIG -v $KEYSTORE_PARENT_DIR:$VOLUME_DIRPATH -e PORT=80 -e ATTESTATION_SIGNER_KEYSTORE_PASSPHRASE=$(cat $KEYSTORE_PARENT_DIR/.password) -e ATTESTATION_SIGNER_KEYSTORE_DIRPATH=$VOLUME_DIRPATH -p 80:80 us.gcr.io/celo-testnet/celo-monorepo:$TAG -c " cd /celo-monorepo/packages/attestation-service && yarn run db:migrate && yarn start "\n')),(0,o.kt)("h3",{id:"running-the-attestation-service-pre-v140"},"Running the Attestation Service pre-v1.4.0"),(0,o.kt)("p",null,"First, ensure that your local node is fully synced:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"# On the Attestation machine, if using a Celo full node for key management\nsudo celocli node:synced --node geth.ipc\n")),(0,o.kt)("p",null,"Then, start the Attestation Service by running:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'# On the Attestation machine\nexport TAG=attestation-service-mainnet\ndocker run --name celo-attestation-service -it --restart always --entrypoint /bin/bash --network host --env-file $CONFIG -e PORT=80 -p 80:80 us.gcr.io/celo-testnet/celo-monorepo:$TAG -c " cd /celo-monorepo/packages/attestation-service && yarn run db:migrate && yarn start "\n')),(0,o.kt)("h3",{id:"delivery-receipts"},"Delivery Receipts"),(0,o.kt)("p",null,"Attestation Services supports delivery receipts so that SMS providers can callback to provide delivery information. This triggers retries as needed, even between providers, and enables delivery success and timing metrics to be logged and made accessible to the client."),(0,o.kt)("p",null,"There is no configuration necessary to enable Twilio or Nexmo delivery receipts. The Attestation Service uses the URL in the validator metadata, provided that ",(0,o.kt)("inlineCode",{parentName:"p"},"VERIFY_CONFIG_ON_STARTUP")," is enabled. The URL for callbacks can always be specified with the ",(0,o.kt)("inlineCode",{parentName:"p"},"EXTERNAL_CALLBACK_HOSTPORT")," configuration option. The service appends ",(0,o.kt)("inlineCode",{parentName:"p"},"/delivery_status_{PROVIDER}")," (i.e. ",(0,o.kt)("inlineCode",{parentName:"p"},"/delivery_status_twilioverify"),") on to the URL, and supplies that to the provider through its API."),(0,o.kt)("p",null,"For MessageBird, provide the callback URL (be sure to include ",(0,o.kt)("inlineCode",{parentName:"p"},"/delivery_status_messagebird"),") in the MessageBird dashboard's ",(0,o.kt)("a",{parentName:"p",href:"https://dashboard.messagebird.com/en/developers/settings"},"API Settings")," page."),(0,o.kt)("p",null,"If you are using a load balancer in front of Attestation Service with a URL based routing configuration, be careful to prevent these routes being filtered."),(0,o.kt)("h3",{id:"test-endpoint"},"Test Endpoint"),(0,o.kt)("p",null,"Attestation Service provides a test endpoint."),(0,o.kt)("p",null,"You can run the following command (","[reference]",'("/command-line-interface/identity.md#celocli identity:test-attestation-service")) to test an Attestation Service and send an SMS to yourself:'),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"celocli identity:test-attestation-service --from $CELO_ATTESTATION_SIGNER_ADDRESS --phoneNumber <YOUR-PHONE-NUMBER-E164-FORMAT> --message <YOUR_MESSAGE> [--provider <PROVIDER>]\n")),(0,o.kt)("p",null,"You need the attestation signer key available and unlocked on your local machine."),(0,o.kt)("p",null,"You may wish to do this once for each provider you have configured (i.e. ",(0,o.kt)("inlineCode",{parentName:"p"},"--provider=messagebird"),"). If the ",(0,o.kt)("inlineCode",{parentName:"p"},"provider")," option is not recognized, please upgrade ",(0,o.kt)("inlineCode",{parentName:"p"},"celocli"),"."),(0,o.kt)("p",null,"For ",(0,o.kt)("inlineCode",{parentName:"p"},"twilio"),", please note the following to test the SMS vs. verify API from v1.5.0 onwards:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"--provider=twilioverify")," (v1.5.0+)"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"--provider=twiliomessaging")," (v1.5.0+)"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"--provider=twilio")," (up to v1.4.0)")),(0,o.kt)("p",null,"Note that this does not use an identical code path to real attestations (since those require specific on-chain state) so this endpoint should not be used in place of monitoring logs and metrics."),(0,o.kt)("p",null,"You should receive an SMS, and the Attestation Service should log messages indicating that the message was ",(0,o.kt)("inlineCode",{parentName:"p"},"Sent")," and then, if delivery reports can be made successfully, ",(0,o.kt)("inlineCode",{parentName:"p"},"Delivered"),". Depending on the provider, you may receive several callbacks as the message progresses through the network."),(0,o.kt)("p",null,"If this works then your attestation service should be successfully deployed!"),(0,o.kt)("h2",{id:"monitoring"},"Monitoring"),(0,o.kt)("p",null,"It is important to monitor the Attestation Service and, if using a full node for key management, also ",(0,o.kt)("a",{parentName:"p",href:"/es/validator-guide/monitoring"},"monitor the full node")," that it depends on."),(0,o.kt)("h3",{id:"logging"},"Logging"),(0,o.kt)("p",null,"The Attestation Service provides JSON-format structured logs."),(0,o.kt)("h3",{id:"healthcheck"},"Healthcheck"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"/healthz")," endpoint will respond with status ",(0,o.kt)("inlineCode",{parentName:"p"},"200")," when all of the following are true: the attestation signer key is available and unlocked, the node is not syncing, the latest block is recent, and the database is accessible. Otherwise it will respond with status ",(0,o.kt)("inlineCode",{parentName:"p"},"500"),"."),(0,o.kt)("p",null,"Use this endpoint when configuring a load balancer in front of multiple instances. The results of the last healthcheck are reported via the ",(0,o.kt)("inlineCode",{parentName:"p"},"attestation_service_healthy")," metric."),(0,o.kt)("p",null,"Attestation Service also has a ",(0,o.kt)("inlineCode",{parentName:"p"},"/status")," endpoint for configuration information."),(0,o.kt)("h3",{id:"metrics"},"Metrics"),(0,o.kt)("p",null,"Attestation Service exposes the following Prometheus format metrics at ",(0,o.kt)("inlineCode",{parentName:"p"},"/metrics")," for attestations made. Please note that metrics are per instance."),(0,o.kt)("p",null,"Please note that monitoring endpoints including metrics are exposed as a path on the usual host port. This means they are public by default. If you want metrics to be internal only, you will need to configure a load balancer appropriately."),(0,o.kt)("p",null,"Metrics for the service:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"attestation_service_healthy"),": Gauge with value ",(0,o.kt)("inlineCode",{parentName:"li"},"0")," or ",(0,o.kt)("inlineCode",{parentName:"li"},"1")," indicating whether the instance failed or passed its last ",(0,o.kt)("a",{parentName:"li",href:"#healthcheck"},"healthcheck"),". Calls to ",(0,o.kt)("inlineCode",{parentName:"li"},"/healthz")," update this gauge, and the process also runs a background healthcheck every minute. It is strongly recommended that you monitor this metric.")),(0,o.kt)("p",null,"Metrics for attestation requests:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"attestation_requests_total"),": Counter for the number of attestation requests.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"attestation_requests_rerequest"),": Counter for the number of attestation re-requests. A client that rerequests the same attestation is similar to the service receiving a delivery failure notification.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"attestation_requests_already_sent"),": Counter for the number of attestation requests that were received but dropped because the local database records that they have already been completed.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"attestation_requests_wrong_issuer"),": Counter for the number of attestation requests that were received but dropped because they specified the incorrect validator.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"attestation_requests_without_incomplete_attestation"),": Counter for the number of attestation requests that were received but when querying the blockchain no matching incomplete attestation could be found.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"attestation_requests_valid"),": Counter for the number of requests received that are for the correct issuer and an incomplete attestation exists.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"attestation_requests_attestation_errors"),": Counter for the number of requests for which producing the attestation failed. This could be due to phone number or salt that does not match the hash, or the attestation was recorded fewer than 4 blocks ago.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"attestation_requests_unable_to_serve"),": Counters for the number of requests that could not be served because no SMS provider was configured for the phone number in the request. Label ",(0,o.kt)("inlineCode",{parentName:"p"},"country")," breaks down the count by country code.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"attestation_requests_number_type"),": Counter for attestation requests by the type of the phone number. Label ",(0,o.kt)("inlineCode",{parentName:"p"},"country")," breaks down the counny by country code. Label ",(0,o.kt)("inlineCode",{parentName:"p"},"type")," has values including: ",(0,o.kt)("inlineCode",{parentName:"p"},"fixed_line"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"mobile"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"fixed_line_or_mobile"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"toll_free"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"premium_rate"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"shared_cost"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"voip"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"personal_number"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"pager"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"uan"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"voicemail"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"unknown"),".")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"attestation_requests_sent_sms"),": Counter for the number of SMS successfully sent.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"attestation_requests_failed_to_send_sms"),": Counter for the number of SMS that failed to send.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"attestation_requests_believed_delivered_sms"),": Counter for the number of SMS that were eventually delivered, or believed to be delivered after a timeout without hearing about delivery failure.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"attestation_requests_unexpected_errors"),": Counter for the number of unexpected errors."))),(0,o.kt)("p",null,"The following metrics track each delivery attempt. Each client request for an attestation may result in several delivery attempts, at most ",(0,o.kt)("inlineCode",{parentName:"p"},"MAX_DELIVERY_ATTEMPTS")," configured for that country:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"attestation_attempts_delivery_status"),": Counter for delivery attempts made. Label ",(0,o.kt)("inlineCode",{parentName:"p"},"country")," breaks down the count by country code. Label ",(0,o.kt)("inlineCode",{parentName:"p"},"provider")," identifies the provider. Label ",(0,o.kt)("inlineCode",{parentName:"p"},"status")," identifies the outcome:"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"Created"),": The request was accepted by the provider.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"Queued"),": The SMS is buffered or queued, but still in flight.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"Upstream"),": The SMS was passed to an upstream carrier.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"Delivered"),": A final delivery receipt was received indicating the SMS was succesfully delivered.")))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"attestation_attempts_delivery_error_codes"),": Counter for delivery attempts made. Label ",(0,o.kt)("inlineCode",{parentName:"p"},"country")," breaks down the count by country code. Label ",(0,o.kt)("inlineCode",{parentName:"p"},"provider")," identifies the provider. Label ",(0,o.kt)("inlineCode",{parentName:"p"},"code")," identifies the provider-specific error codes: see ",(0,o.kt)("a",{parentName:"p",href:"https://www.twilio.com/docs/api/errors#3-anchor"},"Twilio error codes")," and ",(0,o.kt)("a",{parentName:"p",href:"https://developer.nexmo.com/messaging/sms/guides/delivery-receipts#dlr-error-codes"},"Nexmo error codes")," for more details."))),(0,o.kt)("p",null,"Administrative metrics:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"The ",(0,o.kt)("inlineCode",{parentName:"li"},"attestation_provider_balance")," tracks the value of the balance of accounts at supported providers. Label ",(0,o.kt)("inlineCode",{parentName:"li"},"provider")," identifies the provider. This is currently only supported for Nexmo, and is off by default but can be enabled by setting ",(0,o.kt)("inlineCode",{parentName:"li"},"NEXMO_ACCOUNT_BALANCE_METRIC"),". The metric is populated as a value in the account currency, e.g USD, and only once a successful SMS has been delivered by that provider.")),(0,o.kt)("h3",{id:"error-responses"},"Error Responses"),(0,o.kt)("p",null,"Here is a list of the error codes and messages returned by the Attestation Service and what they mean. This can be helpful when looking through raw attestation service logs. In addition to the error codes listed below, the service also returns ",(0,o.kt)("inlineCode",{parentName:"p"},"500")," for ",(0,o.kt)("inlineCode",{parentName:"p"},"Unknown Error"),"."),(0,o.kt)("h4",{id:"422-unprocessable-entity"},"422, Unprocessable Entity"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"Mismatching issuer, I am ${address}")," - The attestation request references an issuer address that does not match that of the AS that actually received the request."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"NO_INCOMPLETE_ATTESTATION_FOUND_ERROR / 'No incomplete attestation found'")," - The Attestations contract has no record that this AS was randomly assigned as an issuer for the given account/identifier pair."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"ATTESTATION_ERROR / 'Valid attestation could not be provided'")," - A call to validateAttestationCode in the Attestations contract has failed. This method checks that (1) there is a non-expired incomplete attestation assigned to the issuer whose signature constitutes the given attestation code."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"'Invalid securityCodePrefix'")," - A security code prefix with an incorrect length was provided in the attestation request."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"'Invalid smsRetrieverAppSig'")," - The provided smsRetrieverAppSig does not match the regex ",(0,o.kt)("inlineCode",{parentName:"li"},"'^[\\\\w+]{5,12}$'")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"'Attestation can no longer be re-requested'")," - The user is re-requesting an attestation that the AS thinks was completed too long ago for it to accept the re-request."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"'Delivery attempts exceeded'")," - The AS has attempted to deliver this attestation to the user too many times and will not try again."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"ErrorMessages.NO_PROVIDER_SETUP / 'No provider was setup for this phone number'")," - The AS has not setup an SMS provider"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"ErrorMessages.INVALID_SIGNATURE / 'Invalid signature provided'")," - The signature provided in a ",(0,o.kt)("inlineCode",{parentName:"li"},"AttestationServiceTestRequest")," was not generated by either the AS's account address or attestation signer address.")),(0,o.kt)("h4",{id:"404-not-found"},"404, Not Found"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"'Attestation not found'")," - The attestation the user is attempting to complete could not be found in the AS's database.")),(0,o.kt)("h4",{id:"403-forbidden"},"403, Forbidden"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"'Security code attempts exceeded'")," - The user has attempted to complete the attestation with an incorrect security code too many times. The attestation can no longer be completed."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"'Invalid security code'")," - The user has attempted to complete the attestation with an incorrect security code.")),(0,o.kt)("h4",{id:"401-unauthorized"},"401, Unauthorized"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"'Missing authentication'")," - the authentication header is missing from the request"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"'Invalid signature'")," - The authentication header failed signature verification. It should be signed by either the account's DEK or wallet key.")),(0,o.kt)("h3",{id:"blockchain"},"Blockchain"),(0,o.kt)("p",null,"The number of requested and entirely completed attestations is in effect recorded on the blockchain. The values can be seen at ",(0,o.kt)("a",{parentName:"p",href:"https://explorer.celo.org"},"Celo Explorer"),": enter the Validator's address and click the 'Celo Info' tab."),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://thecelo.com/?tab=attestations"},"TheCelo")," tracks global attestation counts and success rates, and shows detailed information about recent attestation attempts."),(0,o.kt)("h3",{id:"attestation-service-dashboard"},"Attestation Service Dashboard"),(0,o.kt)("p",null,"After your service is up and running, you can monitor its performance using the public ",(0,o.kt)("a",{parentName:"p",href:"https://metabase.celo-networks-dev.org/public/dashboard/b0a27650-1d62-4645-81d7-26ff7546ff0d?date_filter=past2weeks~"},"Attestation Service Dashboard"),". Enter your validator address in the top right search bar to view your service's stats. This dashboard can also be useful for troubleshooting various issues that will arise with certain geographic regions or providers."))}u.isMDXComponent=!0}}]);