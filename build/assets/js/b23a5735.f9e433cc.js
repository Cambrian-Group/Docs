"use strict";(self.webpackChunkcelo_docs=self.webpackChunkcelo_docs||[]).push([[6524],{3905:function(e,t,n){n.d(t,{Zo:function(){return m},kt:function(){return d}});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},c=Object.keys(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var i=r.createContext({}),s=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},m=function(e){var t=s(e.components);return r.createElement(i.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,c=e.originalType,i=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),u=s(n),d=o,f=u["".concat(i,".").concat(d)]||u[d]||p[d]||c;return n?r.createElement(f,a(a({ref:t},m),{},{components:n})):r.createElement(f,a({ref:t},m))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var c=n.length,a=new Array(c);a[0]=u;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l.mdxType="string"==typeof e?e:o,a[1]=l;for(var s=2;s<c;s++)a[s]=n[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},56819:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return i},metadata:function(){return s},toc:function(){return m},default:function(){return u}});var r=n(83117),o=n(80102),c=(n(67294),n(3905)),a=["components"],l={title:"celocli network",description:"View details about the network, like contracts and parameters"},i="celocli network",s={unversionedId:"command-line-interface/network",id:"command-line-interface/network",title:"celocli network",description:"View details about the network, like contracts and parameters",source:"@site/docs/command-line-interface/network.md",sourceDirName:"command-line-interface",slug:"/command-line-interface/network",permalink:"/command-line-interface/network",editUrl:"https://github.com/celo-org/docs/edit/main/docs/command-line-interface/network.md",tags:[],version:"current",frontMatter:{title:"celocli network",description:"View details about the network, like contracts and parameters"},sidebar:"docs",previous:{title:"celocli multisig",permalink:"/command-line-interface/multisig"},next:{title:"celocli node",permalink:"/command-line-interface/node"}},m=[{value:"<code>celocli network:contracts</code>",id:"celocli-networkcontracts",children:[],level:2},{value:"<code>celocli network:info</code>",id:"celocli-networkinfo",children:[],level:2},{value:"<code>celocli network:parameters</code>",id:"celocli-networkparameters",children:[],level:2}],p={toc:m};function u(e){var t=e.components,n=(0,o.Z)(e,a);return(0,c.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,c.kt)("h1",{id:"celocli-network"},(0,c.kt)("inlineCode",{parentName:"h1"},"celocli network")),(0,c.kt)("p",null,"View details about the network, like contracts and parameters"),(0,c.kt)("h2",{id:"celocli-networkcontracts"},(0,c.kt)("inlineCode",{parentName:"h2"},"celocli network:contracts")),(0,c.kt)("p",null,"Lists Celo core contracts and their addesses."),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre"},"Lists Celo core contracts and their addesses.\n\nUSAGE\n  $ celocli network:contracts\n\nOPTIONS\n  -x, --extended          show extra columns\n  --columns=columns       only show provided columns (comma-separated)\n  --csv                   output is csv format [alias: --output=csv]\n  --filter=filter         filter property by partial string matching, ex: name=foo\n  --globalHelp            View all available global flags\n  --no-header             hide table header from output\n  --no-truncate           do not truncate output to fit screen\n  --output=csv|json|yaml  output in a more machine friendly format\n  --sort=sort             property to sort by (prepend '-' for descending)\n")),(0,c.kt)("p",null,(0,c.kt)("em",{parentName:"p"},"See code: ",(0,c.kt)("a",{parentName:"em",href:"https://github.com/celo-org/celo-monorepo/tree/master/packages/cli/src/commands/network/contracts.ts"},"src/commands/network/contracts.ts"))),(0,c.kt)("h2",{id:"celocli-networkinfo"},(0,c.kt)("inlineCode",{parentName:"h2"},"celocli network:info")),(0,c.kt)("p",null,"View general network information such as the current block number"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre"},"View general network information such as the current block number\n\nUSAGE\n  $ celocli network:info\n\nOPTIONS\n  -n, --lastN=lastN  [default: 1] Fetch info about the last n epochs\n  --globalHelp       View all available global flags\n")),(0,c.kt)("p",null,(0,c.kt)("em",{parentName:"p"},"See code: ",(0,c.kt)("a",{parentName:"em",href:"https://github.com/celo-org/celo-monorepo/tree/master/packages/cli/src/commands/network/info.ts"},"src/commands/network/info.ts"))),(0,c.kt)("h2",{id:"celocli-networkparameters"},(0,c.kt)("inlineCode",{parentName:"h2"},"celocli network:parameters")),(0,c.kt)("p",null,"View parameters of the network, including but not limited to configuration for the various Celo core smart contracts."),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre"},"View parameters of the network, including but not limited to configuration for the various Celo core smart contracts.\n\nUSAGE\n  $ celocli network:parameters\n\nOPTIONS\n  --globalHelp  View all available global flags\n  --raw         Display raw numerical configuration\n")),(0,c.kt)("p",null,(0,c.kt)("em",{parentName:"p"},"See code: ",(0,c.kt)("a",{parentName:"em",href:"https://github.com/celo-org/celo-monorepo/tree/master/packages/cli/src/commands/network/parameters.ts"},"src/commands/network/parameters.ts"))))}u.isMDXComponent=!0}}]);