"use strict";(self.webpackChunkcelo_docs=self.webpackChunkcelo_docs||[]).push([[1399],{3905:function(e,n,r){r.d(n,{Zo:function(){return u},kt:function(){return m}});var t=r(67294);function o(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function a(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function s(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?a(Object(r),!0).forEach((function(n){o(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function c(e,n){if(null==e)return{};var r,t,o=function(e,n){if(null==e)return{};var r,t,o={},a=Object.keys(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||(o[r]=e[r]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var i=t.createContext({}),l=function(e){var n=t.useContext(i),r=n;return e&&(r="function"==typeof e?e(n):s(s({},n),e)),r},u=function(e){var n=l(e.components);return t.createElement(i.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},d=t.forwardRef((function(e,n){var r=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),d=l(r),m=o,f=d["".concat(i,".").concat(m)]||d[m]||p[m]||a;return r?t.createElement(f,s(s({ref:n},u),{},{components:r})):t.createElement(f,s({ref:n},u))}));function m(e,n){var r=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=r.length,s=new Array(a);s[0]=d;var c={};for(var i in n)hasOwnProperty.call(n,i)&&(c[i]=n[i]);c.originalType=e,c.mdxType="string"==typeof e?e:o,s[1]=c;for(var l=2;l<a;l++)s[l]=r[l];return t.createElement.apply(null,s)}return t.createElement.apply(null,r)}d.displayName="MDXCreateElement"},14805:function(e,n,r){r.d(n,{Z:function(){return l}});var t=r(67294),o="pageRef_Ejpu",a="left_uwxi",s="arrow_+Oog",c="pageName_Jzs5",i="url_tyFG";function l(e){var n=e.url,r=e.pageName;return t.createElement("a",{className:o,href:n},t.createElement("div",{className:a},t.createElement("div",{className:s},"\u2192"),t.createElement("div",{className:c},r)),t.createElement("div",{className:i},n))}},91908:function(e,n,r){r.r(n),r.d(n,{frontMatter:function(){return i},contentTitle:function(){return l},metadata:function(){return u},toc:function(){return p},default:function(){return m}});var t=r(83117),o=r(80102),a=(r(67294),r(3905)),s=r(14805),c=["components"],i={title:"Use onchain randomness",description:"How to use onchain randomness in your smart contracts.",slug:"/developer-guide/start/randomness"},l=void 0,u={unversionedId:"developer-resources/walkthroughs/randomness",id:"developer-resources/walkthroughs/randomness",title:"Use onchain randomness",description:"How to use onchain randomness in your smart contracts.",source:"@site/docs/developer-resources/walkthroughs/randomness.md",sourceDirName:"developer-resources/walkthroughs",slug:"/developer-guide/start/randomness",permalink:"/developer-guide/start/randomness",editUrl:"https://github.com/celo-org/docs/edit/main/docs/developer-resources/walkthroughs/randomness.md",tags:[],version:"current",frontMatter:{title:"Use onchain randomness",description:"How to use onchain randomness in your smart contracts.",slug:"/developer-guide/start/randomness"}},p=[],d={toc:p};function m(e){var n=e.components,r=(0,o.Z)(e,c);return(0,a.kt)("wrapper",(0,t.Z)({},d,r,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Onchain randomness is used for selecting validators to perform phone number verification. Read more about how onchain randomness is produced at the provided page."),(0,a.kt)(s.Z,{url:"/celo-codebase/protocol/identity/randomness",pageName:"Randomness",mdxType:"PageRef"}),(0,a.kt)("p",null,"This randomness can be used by any smart contracts deployed to a Celo network."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-solidity"},'import "celo-monorepo/packages/protocol/identity/interfaces/IRandom.sol";\nimport "celo-monorepo/packages/protocol/common/interfaces/IRegistry.sol";\n\ncontract Example {\n    function test() external view returns (bytes32 randomness) {\n        randomness = IRandom(\n            IRegistry(0x000000000000000000000000000000000000ce10)\n                .getAddressFor(keccak256(abi.encodePacked("Random")))\n        ).random();\n    }\n}\n')),(0,a.kt)("p",null,"Alternatively, through inheritance of ",(0,a.kt)("inlineCode",{parentName:"p"},"UsingRegistry"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-solidity"},'import "celo-monorepo/packages/protocol/common/UsingRegistryV2.sol";\n\ncontract Example is UsingRegistryV2 {\n    function test() external view returns (bytes32 randomness) {\n        randomness = getRandom().random();\n    }\n}\n')))}m.isMDXComponent=!0}}]);