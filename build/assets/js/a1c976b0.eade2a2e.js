"use strict";(self.webpackChunkcelo_docs=self.webpackChunkcelo_docs||[]).push([[5954],{3905:function(e,n,o){o.d(n,{Zo:function(){return p},kt:function(){return h}});var a=o(67294);function r(e,n,o){return n in e?Object.defineProperty(e,n,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[n]=o,e}function t(e,n){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),o.push.apply(o,a)}return o}function c(e){for(var n=1;n<arguments.length;n++){var o=null!=arguments[n]?arguments[n]:{};n%2?t(Object(o),!0).forEach((function(n){r(e,n,o[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):t(Object(o)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(o,n))}))}return e}function l(e,n){if(null==e)return{};var o,a,r=function(e,n){if(null==e)return{};var o,a,r={},t=Object.keys(e);for(a=0;a<t.length;a++)o=t[a],n.indexOf(o)>=0||(r[o]=e[o]);return r}(e,n);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);for(a=0;a<t.length;a++)o=t[a],n.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(r[o]=e[o])}return r}var i=a.createContext({}),s=function(e){var n=a.useContext(i),o=n;return e&&(o="function"==typeof e?e(n):c(c({},n),e)),o},p=function(e){var n=s(e.components);return a.createElement(i.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},u=a.forwardRef((function(e,n){var o=e.components,r=e.mdxType,t=e.originalType,i=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=s(o),h=r,m=u["".concat(i,".").concat(h)]||u[h]||d[h]||t;return o?a.createElement(m,c(c({ref:n},p),{},{components:o})):a.createElement(m,c({ref:n},p))}));function h(e,n){var o=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var t=o.length,c=new Array(t);c[0]=u;var l={};for(var i in n)hasOwnProperty.call(n,i)&&(l[i]=n[i]);l.originalType=e,l.mdxType="string"==typeof e?e:r,c[1]=l;for(var s=2;s<t;s++)c[s]=o[s];return a.createElement.apply(null,c)}return a.createElement.apply(null,o)}u.displayName="MDXCreateElement"},3566:function(e,n,o){o.r(n),o.d(n,{frontMatter:function(){return l},contentTitle:function(){return i},metadata:function(){return s},toc:function(){return p},default:function(){return u}});var a=o(83117),r=o(80102),t=(o(67294),o(3905)),c=["components"],l={},i="celocli governance",s={unversionedId:"command-line-interface/governance",id:"command-line-interface/governance",title:"celocli governance",description:"Interact with on-chain governance proposals and hotfixes",source:"@site/docs/command-line-interface/governance.md",sourceDirName:"command-line-interface",slug:"/command-line-interface/governance",permalink:"/command-line-interface/governance",editUrl:"https://github.com/celo-org/docs/edit/main/docs/command-line-interface/governance.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"celocli exchange",permalink:"/command-line-interface/exchange"},next:{title:"celocli grandamento",permalink:"/command-line-interface/grandamento"}},p=[{value:"<code>celocli governance:build-proposal</code>",id:"celocli-governancebuild-proposal",children:[],level:2},{value:"<code>celocli governance:dequeue</code>",id:"celocli-governancedequeue",children:[],level:2},{value:"<code>celocli governance:execute</code>",id:"celocli-governanceexecute",children:[],level:2},{value:"<code>celocli governance:executehotfix</code>",id:"celocli-governanceexecutehotfix",children:[],level:2},{value:"<code>celocli governance:hashhotfix</code>",id:"celocli-governancehashhotfix",children:[],level:2},{value:"<code>celocli governance:list</code>",id:"celocli-governancelist",children:[],level:2},{value:"<code>celocli governance:preparehotfix</code>",id:"celocli-governancepreparehotfix",children:[],level:2},{value:"<code>celocli governance:propose</code>",id:"celocli-governancepropose",children:[],level:2},{value:"<code>celocli governance:revokeupvote</code>",id:"celocli-governancerevokeupvote",children:[],level:2},{value:"<code>celocli governance:show</code>",id:"celocli-governanceshow",children:[],level:2},{value:"<code>celocli governance:upvote</code>",id:"celocli-governanceupvote",children:[],level:2},{value:"<code>celocli governance:vote</code>",id:"celocli-governancevote",children:[],level:2},{value:"<code>celocli governance:whitelisthotfix</code>",id:"celocli-governancewhitelisthotfix",children:[],level:2},{value:"<code>celocli governance:withdraw</code>",id:"celocli-governancewithdraw",children:[],level:2}],d={toc:p};function u(e){var n=e.components,o=(0,r.Z)(e,c);return(0,t.kt)("wrapper",(0,a.Z)({},d,o,{components:n,mdxType:"MDXLayout"}),(0,t.kt)("h1",{id:"celocli-governance"},(0,t.kt)("inlineCode",{parentName:"h1"},"celocli governance")),(0,t.kt)("p",null,"Interact with on-chain governance proposals and hotfixes"),(0,t.kt)("h2",{id:"celocli-governancebuild-proposal"},(0,t.kt)("inlineCode",{parentName:"h2"},"celocli governance:build-proposal")),(0,t.kt)("p",null,"Interactively build a governance proposal"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre"},"Interactively build a governance proposal\n\nUSAGE\n  $ celocli governance:build-proposal\n\nOPTIONS\n  --afterExecutingID=afterExecutingID              Governance proposal identifier which\n                                                   will be executed prior to proposal\n                                                   being built\n\n  --afterExecutingProposal=afterExecutingProposal  Path to proposal which will be\n                                                   executed prior to proposal being\n                                                   built\n\n  --globalHelp                                     View all available global flags\n\n  --output=output                                  [default: proposalTransactions.json]\n                                                   Path to output\n\nEXAMPLE\n  build-proposal --output ./transactions.json\n")),(0,t.kt)("p",null,(0,t.kt)("em",{parentName:"p"},"See code: ",(0,t.kt)("a",{parentName:"em",href:"https://github.com/celo-org/celo-monorepo/tree/master/packages/cli/src/commands/governance/build-proposal.ts"},"src/commands/governance/build-proposal.ts"))),(0,t.kt)("h2",{id:"celocli-governancedequeue"},(0,t.kt)("inlineCode",{parentName:"h2"},"celocli governance:dequeue")),(0,t.kt)("p",null,"Try to dequeue governance proposal"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre"},"Try to dequeue governance proposal\n\nUSAGE\n  $ celocli governance:dequeue\n\nOPTIONS\n  --from=0xc1912fEE45d61C87Cc5EA59DaE31190FFFFf232d  (required) From address\n  --globalHelp                                       View all available global flags\n\nEXAMPLE\n  dequeue --from 0x5409ed021d9299bf6814279a6a1411a7e866a631\n")),(0,t.kt)("p",null,(0,t.kt)("em",{parentName:"p"},"See code: ",(0,t.kt)("a",{parentName:"em",href:"https://github.com/celo-org/celo-monorepo/tree/master/packages/cli/src/commands/governance/dequeue.ts"},"src/commands/governance/dequeue.ts"))),(0,t.kt)("h2",{id:"celocli-governanceexecute"},(0,t.kt)("inlineCode",{parentName:"h2"},"celocli governance:execute")),(0,t.kt)("p",null,"Execute a passing governance proposal"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre"},"Execute a passing governance proposal\n\nUSAGE\n  $ celocli governance:execute\n\nOPTIONS\n  --from=0xc1912fEE45d61C87Cc5EA59DaE31190FFFFf232d  (required) Executor's address\n  --globalHelp                                       View all available global flags\n\n  --proposalID=proposalID                            (required) UUID of proposal to\n                                                     execute\n\nEXAMPLE\n  execute --proposalID 99 --from 0x5409ed021d9299bf6814279a6a1411a7e866a631\n")),(0,t.kt)("p",null,(0,t.kt)("em",{parentName:"p"},"See code: ",(0,t.kt)("a",{parentName:"em",href:"https://github.com/celo-org/celo-monorepo/tree/master/packages/cli/src/commands/governance/execute.ts"},"src/commands/governance/execute.ts"))),(0,t.kt)("h2",{id:"celocli-governanceexecutehotfix"},(0,t.kt)("inlineCode",{parentName:"h2"},"celocli governance:executehotfix")),(0,t.kt)("p",null,"Execute a governance hotfix prepared for the current epoch"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre"},"Execute a governance hotfix prepared for the current epoch\n\nUSAGE\n  $ celocli governance:executehotfix\n\nOPTIONS\n  --from=0xc1912fEE45d61C87Cc5EA59DaE31190FFFFf232d  (required) Executors's address\n  --globalHelp                                       View all available global flags\n\n  --jsonTransactions=jsonTransactions                (required) Path to json\n                                                     transactions\n\n  --salt=salt                                        (required) Secret salt associated\n                                                     with hotfix\n\nEXAMPLE\n  executehotfix --jsonTransactions ./transactions.json --salt\n  0x614dccb5ac13cba47c2430bdee7829bb8c8f3603a8ace22e7680d317b39e3658 --from\n  0x5409ed021d9299bf6814279a6a1411a7e866a631\n")),(0,t.kt)("p",null,(0,t.kt)("em",{parentName:"p"},"See code: ",(0,t.kt)("a",{parentName:"em",href:"https://github.com/celo-org/celo-monorepo/tree/master/packages/cli/src/commands/governance/executehotfix.ts"},"src/commands/governance/executehotfix.ts"))),(0,t.kt)("h2",{id:"celocli-governancehashhotfix"},(0,t.kt)("inlineCode",{parentName:"h2"},"celocli governance:hashhotfix")),(0,t.kt)("p",null,"Hash a governance hotfix specified by JSON and a salt"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre"},"Hash a governance hotfix specified by JSON and a salt\n\nUSAGE\n  $ celocli governance:hashhotfix\n\nOPTIONS\n  --force                              Skip execution check\n  --globalHelp                         View all available global flags\n\n  --jsonTransactions=jsonTransactions  (required) Path to json transactions of the\n                                       hotfix\n\n  --salt=salt                          (required) Secret salt associated with hotfix\n\nEXAMPLE\n  hashhotfix --jsonTransactions ./transactions.json --salt\n  0x614dccb5ac13cba47c2430bdee7829bb8c8f3603a8ace22e7680d317b39e3658\n")),(0,t.kt)("p",null,(0,t.kt)("em",{parentName:"p"},"See code: ",(0,t.kt)("a",{parentName:"em",href:"https://github.com/celo-org/celo-monorepo/tree/master/packages/cli/src/commands/governance/hashhotfix.ts"},"src/commands/governance/hashhotfix.ts"))),(0,t.kt)("h2",{id:"celocli-governancelist"},(0,t.kt)("inlineCode",{parentName:"h2"},"celocli governance:list")),(0,t.kt)("p",null,"List live governance proposals (queued and ongoing)"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre"},"List live governance proposals (queued and ongoing)\n\nUSAGE\n  $ celocli governance:list\n\nOPTIONS\n  -x, --extended          show extra columns\n  --columns=columns       only show provided columns (comma-separated)\n  --csv                   output is csv format [alias: --output=csv]\n  --filter=filter         filter property by partial string matching, ex: name=foo\n  --globalHelp            View all available global flags\n  --no-header             hide table header from output\n  --no-truncate           do not truncate output to fit screen\n  --output=csv|json|yaml  output in a more machine friendly format\n  --sort=sort             property to sort by (prepend '-' for descending)\n\nEXAMPLE\n  list\n")),(0,t.kt)("p",null,(0,t.kt)("em",{parentName:"p"},"See code: ",(0,t.kt)("a",{parentName:"em",href:"https://github.com/celo-org/celo-monorepo/tree/master/packages/cli/src/commands/governance/list.ts"},"src/commands/governance/list.ts"))),(0,t.kt)("h2",{id:"celocli-governancepreparehotfix"},(0,t.kt)("inlineCode",{parentName:"h2"},"celocli governance:preparehotfix")),(0,t.kt)("p",null,"Prepare a governance hotfix for execution in the current epoch"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre"},"Prepare a governance hotfix for execution in the current epoch\n\nUSAGE\n  $ celocli governance:preparehotfix\n\nOPTIONS\n  --from=0xc1912fEE45d61C87Cc5EA59DaE31190FFFFf232d  (required) Preparer's address\n  --globalHelp                                       View all available global flags\n\n  --hash=hash                                        (required) Hash of hotfix\n                                                     transactions\n\nEXAMPLE\n  preparehotfix --hash\n  0x614dccb5ac13cba47c2430bdee7829bb8c8f3603a8ace22e7680d317b39e3658 --from\n  0x5409ed021d9299bf6814279a6a1411a7e866a631\n")),(0,t.kt)("p",null,(0,t.kt)("em",{parentName:"p"},"See code: ",(0,t.kt)("a",{parentName:"em",href:"https://github.com/celo-org/celo-monorepo/tree/master/packages/cli/src/commands/governance/preparehotfix.ts"},"src/commands/governance/preparehotfix.ts"))),(0,t.kt)("h2",{id:"celocli-governancepropose"},(0,t.kt)("inlineCode",{parentName:"h2"},"celocli governance:propose")),(0,t.kt)("p",null,"Submit a governance proposal"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre"},"Submit a governance proposal\n\nUSAGE\n  $ celocli governance:propose\n\nOPTIONS\n  --afterExecutingID=afterExecutingID                Governance proposal identifier\n                                                     which will be executed prior to\n                                                     proposal\n\n  --afterExecutingProposal=afterExecutingProposal    Path to proposal which will be\n                                                     executed prior to proposal\n\n  --deposit=deposit                                  (required) Amount of Gold to attach\n                                                     to proposal\n\n  --descriptionURL=descriptionURL                    (required) A URL where further\n                                                     information about the proposal can\n                                                     be viewed\n\n  --force                                            Skip execution check\n\n  --from=0xc1912fEE45d61C87Cc5EA59DaE31190FFFFf232d  (required) Proposer's address\n\n  --globalHelp                                       View all available global flags\n\n  --jsonTransactions=jsonTransactions                (required) Path to json\n                                                     transactions\n\nEXAMPLE\n  propose --jsonTransactions ./transactions.json --deposit 10000 --from\n  0x5409ed021d9299bf6814279a6a1411a7e866a631 --descriptionURL\n  https://gist.github.com/yorhodes/46430eacb8ed2f73f7bf79bef9d58a33\n")),(0,t.kt)("p",null,(0,t.kt)("em",{parentName:"p"},"See code: ",(0,t.kt)("a",{parentName:"em",href:"https://github.com/celo-org/celo-monorepo/tree/master/packages/cli/src/commands/governance/propose.ts"},"src/commands/governance/propose.ts"))),(0,t.kt)("h2",{id:"celocli-governancerevokeupvote"},(0,t.kt)("inlineCode",{parentName:"h2"},"celocli governance:revokeupvote")),(0,t.kt)("p",null,"Revoke upvotes for queued governance proposals"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre"},"Revoke upvotes for queued governance proposals\n\nUSAGE\n  $ celocli governance:revokeupvote\n\nOPTIONS\n  --from=0xc1912fEE45d61C87Cc5EA59DaE31190FFFFf232d  (required) Upvoter's address\n  --globalHelp                                       View all available global flags\n\nEXAMPLE\n  revokeupvote --from 0x5409ed021d9299bf6814279a6a1411a7e866a631\n")),(0,t.kt)("p",null,(0,t.kt)("em",{parentName:"p"},"See code: ",(0,t.kt)("a",{parentName:"em",href:"https://github.com/celo-org/celo-monorepo/tree/master/packages/cli/src/commands/governance/revokeupvote.ts"},"src/commands/governance/revokeupvote.ts"))),(0,t.kt)("h2",{id:"celocli-governanceshow"},(0,t.kt)("inlineCode",{parentName:"h2"},"celocli governance:show")),(0,t.kt)("p",null,"Show information about a governance proposal, hotfix, or account."),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre"},"Show information about a governance proposal, hotfix, or account.\n\nUSAGE\n  $ celocli governance:show\n\nOPTIONS\n  --account=account                                Address of account or voter\n\n  --afterExecutingID=afterExecutingID              Governance proposal identifier which\n                                                   will be executed prior to proposal\n\n  --afterExecutingProposal=afterExecutingProposal  Path to proposal which will be\n                                                   executed prior to proposal\n\n  --globalHelp                                     View all available global flags\n\n  --hotfix=hotfix                                  Hash of hotfix proposal\n\n  --jsonTransactions=jsonTransactions              Output proposal JSON to provided file\n\n  --nonwhitelisters                                If set, displays validators that have\n                                                   not whitelisted the hotfix.\n\n  --notwhitelisted                                 List validators who have not\n                                                   whitelisted the specified hotfix\n\n  --proposalID=proposalID                          UUID of proposal to view\n\n  --raw                                            Display proposal in raw bytes format\n\n  --whitelisters                                   If set, displays validators that have\n                                                   whitelisted the hotfix.\n\nALIASES\n  $ celocli governance:show\n  $ celocli governance:showhotfix\n  $ celocli governance:showaccount\n  $ celocli governance:view\n  $ celocli governance:viewhotfix\n  $ celocli governance:viewaccount\n\nEXAMPLES\n  show --proposalID 99\n\n  show --proposalID 99 --raw\n\n  show --hotfix 0x614dccb5ac13cba47c2430bdee7829bb8c8f3603a8ace22e7680d317b39e3658\n\n  show --hotfix 0x614dccb5ac13cba47c2430bdee7829bb8c8f3603a8ace22e7680d317b39e3658\n  --whitelisters\n\n  show --hotfix 0x614dccb5ac13cba47c2430bdee7829bb8c8f3603a8ace22e7680d317b39e3658\n  --nonwhitelisters\n\n  show --account 0x47e172f6cfb6c7d01c1574fa3e2be7cc73269d95\n")),(0,t.kt)("p",null,(0,t.kt)("em",{parentName:"p"},"See code: ",(0,t.kt)("a",{parentName:"em",href:"https://github.com/celo-org/celo-monorepo/tree/master/packages/cli/src/commands/governance/show.ts"},"src/commands/governance/show.ts"))),(0,t.kt)("h2",{id:"celocli-governanceupvote"},(0,t.kt)("inlineCode",{parentName:"h2"},"celocli governance:upvote")),(0,t.kt)("p",null,"Upvote a queued governance proposal"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre"},"Upvote a queued governance proposal\n\nUSAGE\n  $ celocli governance:upvote\n\nOPTIONS\n  --from=0xc1912fEE45d61C87Cc5EA59DaE31190FFFFf232d  (required) Upvoter's address\n  --globalHelp                                       View all available global flags\n\n  --proposalID=proposalID                            (required) UUID of proposal to\n                                                     upvote\n\nEXAMPLE\n  upvote --proposalID 99 --from 0x5409ed021d9299bf6814279a6a1411a7e866a631\n")),(0,t.kt)("p",null,(0,t.kt)("em",{parentName:"p"},"See code: ",(0,t.kt)("a",{parentName:"em",href:"https://github.com/celo-org/celo-monorepo/tree/master/packages/cli/src/commands/governance/upvote.ts"},"src/commands/governance/upvote.ts"))),(0,t.kt)("h2",{id:"celocli-governancevote"},(0,t.kt)("inlineCode",{parentName:"h2"},"celocli governance:vote")),(0,t.kt)("p",null,"Vote on an approved governance proposal"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre"},"Vote on an approved governance proposal\n\nUSAGE\n  $ celocli governance:vote\n\nOPTIONS\n  --from=0xc1912fEE45d61C87Cc5EA59DaE31190FFFFf232d  (required) Voter's address\n  --globalHelp                                       View all available global flags\n\n  --proposalID=proposalID                            (required) UUID of proposal to vote\n                                                     on\n\n  --value=(Abstain|No|Yes)                           (required) Vote\n\nEXAMPLE\n  vote --proposalID 99 --value Yes --from 0x5409ed021d9299bf6814279a6a1411a7e866a631\n")),(0,t.kt)("p",null,(0,t.kt)("em",{parentName:"p"},"See code: ",(0,t.kt)("a",{parentName:"em",href:"https://github.com/celo-org/celo-monorepo/tree/master/packages/cli/src/commands/governance/vote.ts"},"src/commands/governance/vote.ts"))),(0,t.kt)("h2",{id:"celocli-governancewhitelisthotfix"},(0,t.kt)("inlineCode",{parentName:"h2"},"celocli governance:whitelisthotfix")),(0,t.kt)("p",null,"Whitelist a governance hotfix"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre"},"Whitelist a governance hotfix\n\nUSAGE\n  $ celocli governance:whitelisthotfix\n\nOPTIONS\n  --from=0xc1912fEE45d61C87Cc5EA59DaE31190FFFFf232d  (required) Whitelister's address\n  --globalHelp                                       View all available global flags\n\n  --hash=hash                                        (required) Hash of hotfix\n                                                     transactions\n\nEXAMPLE\n  whitelisthotfix --hash\n  0x614dccb5ac13cba47c2430bdee7829bb8c8f3603a8ace22e7680d317b39e3658 --from\n  0x5409ed021d9299bf6814279a6a1411a7e866a631\n")),(0,t.kt)("p",null,(0,t.kt)("em",{parentName:"p"},"See code: ",(0,t.kt)("a",{parentName:"em",href:"https://github.com/celo-org/celo-monorepo/tree/master/packages/cli/src/commands/governance/whitelisthotfix.ts"},"src/commands/governance/whitelisthotfix.ts"))),(0,t.kt)("h2",{id:"celocli-governancewithdraw"},(0,t.kt)("inlineCode",{parentName:"h2"},"celocli governance:withdraw")),(0,t.kt)("p",null,"Withdraw refunded governance proposal deposits."),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre"},"Withdraw refunded governance proposal deposits.\n\nUSAGE\n  $ celocli governance:withdraw\n\nOPTIONS\n  --from=0xc1912fEE45d61C87Cc5EA59DaE31190FFFFf232d  (required) Proposer's address\n  --globalHelp                                       View all available global flags\n\nEXAMPLE\n  withdraw --from 0x5409ed021d9299bf6814279a6a1411a7e866a631\n")),(0,t.kt)("p",null,(0,t.kt)("em",{parentName:"p"},"See code: ",(0,t.kt)("a",{parentName:"em",href:"https://github.com/celo-org/celo-monorepo/tree/master/packages/cli/src/commands/governance/withdraw.ts"},"src/commands/governance/withdraw.ts"))))}u.isMDXComponent=!0}}]);